[
  {
    "objectID": "blog/coding-to-and-from-NA.html",
    "href": "blog/coding-to-and-from-NA.html",
    "title": "Recoding an NA and back again",
    "section": "",
    "text": "This was written originally in an Excel spreadsheet and used {datapasta} to copy into R as code to build the same data frame. {datapasta} can be access through RStudio as an Addin as well as code. Find out more about {datapasta} from the Introduction to R and R Studio course."
  },
  {
    "objectID": "blog/coding-to-and-from-NA.html#create-data",
    "href": "blog/coding-to-and-from-NA.html#create-data",
    "title": "Recoding an NA and back again",
    "section": "",
    "text": "This was written originally in an Excel spreadsheet and used {datapasta} to copy into R as code to build the same data frame. {datapasta} can be access through RStudio as an Addin as well as code. Find out more about {datapasta} from the Introduction to R and R Studio course."
  },
  {
    "objectID": "blog/coding-to-and-from-NA.html#recoding-to-na",
    "href": "blog/coding-to-and-from-NA.html#recoding-to-na",
    "title": "Recoding an NA and back again",
    "section": "Recoding to NA",
    "text": "Recoding to NA\n\nsurvey &lt;- tibble::tribble(\n  ~Survey.Response, ~Code,\n       \"Response1\",   -9L,\n       \"Response2\",    2L,\n       \"Response3\",   10L,\n       \"Response4\",    0L,\n       \"Response5\",    5L,\n       \"Response6\",   -9L,\n        \"Missing\", NA\n  )"
  },
  {
    "objectID": "blog/coding-to-and-from-NA.html#recode-to-na",
    "href": "blog/coding-to-and-from-NA.html#recode-to-na",
    "title": "Recoding an NA and back again",
    "section": "Recode to NA",
    "text": "Recode to NA\n\nlibrary(tidyverse)\n\nsurvey |&gt; \n  mutate(new_column = na_if(Code, -9))\n\n# A tibble: 7 × 3\n  Survey.Response  Code new_column\n  &lt;chr&gt;           &lt;int&gt;      &lt;int&gt;\n1 Response1          -9         NA\n2 Response2           2          2\n3 Response3          10         10\n4 Response4           0          0\n5 Response5           5          5\n6 Response6          -9         NA\n7 Missing            NA         NA\n\n\nIt’s also possible to use the numbers and case_when():\n\nsurvey |&gt; \n  mutate(new_column = case_when(Code &lt; 0 ~ NA,\n                                Code == 0 ~ 1000,\n                                .default = Code))\n\n# A tibble: 7 × 3\n  Survey.Response  Code new_column\n  &lt;chr&gt;           &lt;int&gt;      &lt;dbl&gt;\n1 Response1          -9         NA\n2 Response2           2          2\n3 Response3          10         10\n4 Response4           0       1000\n5 Response5           5          5\n6 Response6          -9         NA\n7 Missing            NA         NA\n\n\nOr ifelse() where there are only two options:\n\nsurvey |&gt; \n  mutate(new_column = ifelse(Code &lt; 0, NA, Code))\n\n# A tibble: 7 × 3\n  Survey.Response  Code new_column\n  &lt;chr&gt;           &lt;int&gt;      &lt;int&gt;\n1 Response1          -9         NA\n2 Response2           2          2\n3 Response3          10         10\n4 Response4           0          0\n5 Response5           5          5\n6 Response6          -9         NA\n7 Missing            NA         NA"
  },
  {
    "objectID": "blog/coding-to-and-from-NA.html#recode-from-na",
    "href": "blog/coding-to-and-from-NA.html#recode-from-na",
    "title": "Recoding an NA and back again",
    "section": "Recode from NA",
    "text": "Recode from NA\n\nsurvey |&gt; \n  mutate(new_column2 = replace_na(Code, 1000))\n\n# A tibble: 7 × 3\n  Survey.Response  Code new_column2\n  &lt;chr&gt;           &lt;int&gt;       &lt;int&gt;\n1 Response1          -9          -9\n2 Response2           2           2\n3 Response3          10          10\n4 Response4           0           0\n5 Response5           5           5\n6 Response6          -9          -9\n7 Missing            NA        1000"
  }
]