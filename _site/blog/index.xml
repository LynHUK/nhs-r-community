<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>NHS-R Community Quarto website</title>
<link>https://nhs-r-community.github.io/nhs-r-community/blog/</link>
<atom:link href="https://nhs-r-community.github.io/nhs-r-community/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>Blogs are submitted from NHS-R Community members.&lt;br&gt;
</description>
<generator>quarto-1.4.553</generator>
<lastBuildDate>Tue, 12 Mar 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Recoding an NA and back again</title>
  <dc:creator>Zoë Turner</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/coding-to-and-from-NA.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<section id="create-data" class="level2">
<h2 class="anchored" data-anchor-id="create-data">Create data</h2>
<p>This was written originally in an Excel spreadsheet and used {datapasta} to copy into R as code to build the same data frame. {datapasta} can be access through RStudio as an Addin as well as code. Find out more about {datapasta} from the <a href="https://intro-r-rstudio.nhsrcommunity.com/session-datapasta.html#/title-slide">Introduction to R and R Studio course</a>.</p>
</section>
<section id="recoding-to-na" class="level2">
<h2 class="anchored" data-anchor-id="recoding-to-na">Recoding to NA</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">survey <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb1-2">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Survey.Response, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Code,</span>
<span id="cb1-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Response1"</span>,   <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>L,</span>
<span id="cb1-4">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Response2"</span>,    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>L,</span>
<span id="cb1-5">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Response3"</span>,   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>L,</span>
<span id="cb1-6">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Response4"</span>,    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>L,</span>
<span id="cb1-7">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Response5"</span>,    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>L,</span>
<span id="cb1-8">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Response6"</span>,   <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>L,</span>
<span id="cb1-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Missing"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb1-10">  )</span></code></pre></div>
</div>
</section>
<section id="recode-to-na" class="level2">
<h2 class="anchored" data-anchor-id="recode-to-na">Recode to NA</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"></span>
<span id="cb2-3">survey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_column =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">na_if</span>(Code, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 × 3
  Survey.Response  Code new_column
  &lt;chr&gt;           &lt;int&gt;      &lt;int&gt;
1 Response1          -9         NA
2 Response2           2          2
3 Response3          10         10
4 Response4           0          0
5 Response5           5          5
6 Response6          -9         NA
7 Missing            NA         NA</code></pre>
</div>
</div>
<p>It’s also possible to use the numbers and <code>case_when()</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="annotated-cell-3" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><span id="annotated-cell-3-1">survey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-3-2" class="code-annotation-target">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_column =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(Code <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-3-3" class="code-annotation-target">                                Code <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-3-4" class="code-annotation-target">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> Code))</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-3" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="2" data-code-annotation="1">Where <code>Code</code> is less than 0 then code to <code>NA</code>.</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="3" data-code-annotation="2">Where <code>Code</code> is equal to 0 then recode to <code>1000</code> which is a number that will stand out.</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="4" data-code-annotation="3">For everything else return the original data from column <code>Code</code>.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 × 3
  Survey.Response  Code new_column
  &lt;chr&gt;           &lt;int&gt;      &lt;dbl&gt;
1 Response1          -9         NA
2 Response2           2          2
3 Response3          10         10
4 Response4           0       1000
5 Response5           5          5
6 Response6          -9         NA
7 Missing            NA         NA</code></pre>
</div>
</div>
<p>Or <code>ifelse()</code> where there are only two options:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">survey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_column =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(Code <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, Code))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 × 3
  Survey.Response  Code new_column
  &lt;chr&gt;           &lt;int&gt;      &lt;int&gt;
1 Response1          -9         NA
2 Response2           2          2
3 Response3          10         10
4 Response4           0          0
5 Response5           5          5
6 Response6          -9         NA
7 Missing            NA         NA</code></pre>
</div>
</div>
</section>
<section id="recode-from-na" class="level2">
<h2 class="anchored" data-anchor-id="recode-from-na">Recode from NA</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">survey <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_column2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace_na</span>(Code, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 × 3
  Survey.Response  Code new_column2
  &lt;chr&gt;           &lt;int&gt;       &lt;int&gt;
1 Response1          -9          -9
2 Response2           2           2
3 Response3          10          10
4 Response4           0           0
5 Response5           5           5
6 Response6          -9          -9
7 Missing            NA        1000</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-turner2024" class="csl-entry quarto-appendix-citeas">
Turner, Zoë. 2024. <span>“Recoding an NA and Back Again.”</span> March
12, 2024. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/coding-to-and-from-NA.html">https://nhs-r-community.github.io/nhs-r-community//blog/coding-to-and-from-NA.html</a>.
</div></div></section></div> ]]></description>
  <category>R tips</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/coding-to-and-from-NA.html</guid>
  <pubDate>Tue, 12 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Showcasing a function - separate()
</title>
  <dc:creator>Zoë Turner</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/showcasing-functions-separate.html</link>
  <description><![CDATA[ <!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html --><!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
--><!-- <header id="title-block-header" class="quarto-title-block default page-columns"> --><!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> --><section id="create-data" class="level2"><h2 class="anchored" data-anchor-id="create-data">Create data</h2>
<p>This was written originally in an Excel spreadsheet and used {datapasta} to copy into R as code to build the same data frame. {datapasta} can be access through RStudio as an Addin as well as code. Find out more about {datapasta} from the <a href="https://intro-r-rstudio.nhsrcommunity.com/session-datapasta.html#/title-slide">Introduction to R and R Studio course</a>.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://tibble.tidyverse.org/reference/tribble.html">tribble</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Patient</span>,          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Codes</span>,</span>
<span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PatientA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A01, A02, A03"</span>,</span>
<span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PatientB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B01; B02; B03"</span>,</span>
<span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PatientC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C01; C03"</span>,</span>
<span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PatientD"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D01. D02. D03"</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><section id="separate-codes-by-position" class="level2"><h2 class="anchored" data-anchor-id="separate-codes-by-position">Separate codes by position</h2>
<p>Separate into columns in the order data appears</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://tidyverse.tidyverse.org">tidyverse</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidyr</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://tidyr.tidyverse.org/reference/separate.html">separate</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Codes</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 4
  Patient  col1  col2  col3 
  &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;
1 PatientA A01   A02   A03  
2 PatientB B01   B02   B03  
3 PatientC C01   C03   &lt;NA&gt; 
4 PatientD D01   D02   D03  </code></pre>
</div>
</div>
<p><a href="https://tidyr.tidyverse.org/reference/separate.html">https://tidyr.tidyverse.org/reference/separate.html</a></p>
</section><section id="add-a-pivot" class="level2"><h2 class="anchored" data-anchor-id="add-a-pivot">Add a pivot</h2>
<p>To move wide data to longer:</p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidyr</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://tidyr.tidyverse.org/reference/separate.html">separate</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Codes</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidyr</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://tidyr.tidyverse.org/reference/pivot_longer.html">pivot_longer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://tidyselect.r-lib.org/reference/starts_with.html">starts_with</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>               names_to <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 12 × 3
   Patient  type  value
   &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;
 1 PatientA col1  A01  
 2 PatientA col2  A02  
 3 PatientA col3  A03  
 4 PatientB col1  B01  
 5 PatientB col2  B02  
 6 PatientB col3  B03  
 7 PatientC col1  C01  
 8 PatientC col2  C03  
 9 PatientC col3  &lt;NA&gt; 
10 PatientD col1  D01  
11 PatientD col2  D02  
12 PatientD col3  D03  </code></pre>
</div>
</div>


</section><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-turner2024" class="csl-entry quarto-appendix-citeas">
Turner, Zoë. 2024. <span>“Showcasing a Function - `Separate()`.”</span>
March 12, 2024. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/showcasing-functions-separate.html">https://nhs-r-community.github.io/nhs-r-community//blog/showcasing-functions-separate.html</a>.
</div></div></section></div> ]]></description>
  <category>R tips</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/showcasing-functions-separate.html</guid>
  <pubDate>Tue, 12 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Building a Quarto website for NHS-R Community</title>
  <dc:creator>Zoë Turner</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/building-a-quarto-website.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<section id="the-story-so-far" class="level1 page-columns page-full">
<h1>The story so far</h1>
<p>A few years ago Mohammed A Mohammed, who was integral to getting NHS-R Community set up, suggested I might like to get involved by creating a website for NHS-R Community. At that time I had no idea where to start so my involvement stalled and a website was built, with help from a 3rd party, in WordPress. WordPress is a great website tool that can support very complicated sites like NHS-R Community’s, as we have both a static site and an Events Management system which means that we don’t need to rely (or pay!) for Eventbrite. We’ve used the system for sign up to hundreds of webinars and workshops, not to mention several hundred people attending conferences over the years.</p>
<section id="moving-to-purely-coded-websites" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="moving-to-purely-coded-websites">Moving to purely coded websites</h2>
<p>In the time it’s taken from that initial suggestion about building the website to now, where I help to manage the site, I’ve had the opportunity to build websites for myself using <a href="https://rstudio.github.io/distill/website.html">{distill}</a> and <a href="https://hugo-apero-docs.netlify.app/">Hugo Apéro</a> as well as the release of <a href="https://quarto.org/">Quarto</a> which I was incredibly keen to try out for website creation.</p>
<p>I’d used Quarto for slides and reports and been hugely impressed with it. Getting started with Quarto is relatively easy if you’ve coded for a while, but like with anything, you have to start off at the basics and quickly want more complex functionality as you get going. This is even more of an issue when you are moving from one system to another and it’s more of a translation than a build-from-scratch project.</p>

<div class="no-row-height column-margin column-container"><div class="margin-aside">
<p>Although Quarto has come from the R side of coding it can be used by any other language coder as it supports Python, Julia and Observable. Quarto output can be built in RStudio but equally as easily in other programs like VS Code.</p>
</div></div><p>Luckily for me, many people had already jumped into Quarto websites and their code was available online to delve into. I particularly was keen to follow the work of the Brian Tarran for the Royal Statistical Society’s <a href="https://realworlddatascience.net/">Real World Data Science</a> website because, at first glance, this doesn’t give itself away as being built on Quarto! And I also really like Silvia Canelón’s <a href="https://silviacanelon.com/">personal blog site</a> for its beauty and functionality. Silvia has particularly worked hard on accessibility of her website and has written a lot of CSS code which I’m learning through what she has shared.</p>
<p>Accessibility is something that the WordPress site needed considerable work on, particularly when checked with a website called the <a href="https://wave.webaim.org/">Web Accessbility Evaluation Tool</a> which Silvia recommends on her blog site. The new Quarto site will need this too of course but now that the code is out in the open, anyone can contribute. That can be either making changes to the code but also highlighting problems as issues that can then be open to everyone to view.</p>
</section>
<section id="benefits-to-quarto" class="level2">
<h2 class="anchored" data-anchor-id="benefits-to-quarto">Benefits to Quarto</h2>
<section id="accessibility" class="level3">
<h3 class="anchored" data-anchor-id="accessibility">Accessibility</h3>
<p>I’ll mention accessibility again as that’s hugely important and I like the fact that the people working on Quarto also think a lot about accessibility. Adding alt text has never been easier and any code (in the YAML) that refers to an image nearly always has functionality to add image alt text too.</p>
</section>
<section id="search-functionality" class="level3">
<h3 class="anchored" data-anchor-id="search-functionality">Search functionality</h3>
<p>The search function for Quarto books is really impressive and the same functionality can be found in Quarto websites. There might be a plug in within WordPress to make searching through blogs for particular words but with Quarto it’s not something that needs adding - it’s there from the start. I now no longer have to think about tags or categories for blogs to make them easier to find (and then remember them to find the blogs which is the trickier part for me!).</p>
</section>
<section id="formatting-code" class="level3">
<h3 class="anchored" data-anchor-id="formatting-code">Formatting code</h3>
<p>This was a bit of a niggle with WordPress in that it’s not really a website for coders to show their code examples (although there may be a plug in for that!). Quarto handles code snippets and examples by beautifully formatting it to look different to text but also runs the code for you if you want. It’s meant that the charts that are talked about in some blogs are produced as the code is run, not as static pictures that also can’t be copied easily as a picture doesn’t give the functionality for highlighting to copy.</p>
<p>Usually a blogger will choose a nice image to complement their writing and Quarto gives that functionality but I had a lovely surprise when charts that are created by the blog code became the thumbnail image automatically.</p>
</section>
<section id="open-to-contribution" class="level3">
<h3 class="anchored" data-anchor-id="open-to-contribution">Open to contribution</h3>
<p>Having a website that can publish R or Python code is an absolute joy. I used to write blogs in RMarkdown, render them to html and then copy the output to WordPress and in the copying and pasting often lost links or formatting.</p>
<p>Being open to contribution of course also means that the repository will be available to people to do pull requests. I’ve set the repository so that it’s not necessary to Render the website to contribute so any additions or changes just need to be made to the <code>qmd</code> files.</p>
</section>
<section id="a-chance-to-delve-into-history" class="level3">
<h3 class="anchored" data-anchor-id="a-chance-to-delve-into-history">A chance to delve into history</h3>
<p>Now this point could have come from any change in website but I’ve taken the opportunity to go through each blog and transfer it to Quarto. There are no doubt quicker ways to do this as I can export from WordPress and then work on code to to get it to a format that can be published, but I started with moving a couple of blogs to get started and I’ve really enjoyed this even though it takes a bit more time to do.</p>
<p>Starting in 2018 when the blogs first started I didn’t know R <em>at all</em>. I started learning with NHS-R Community so these early blogs meant very little to me at the time. As I’ve gone through each blog, formatting them and checking the R code runs (I found a couple of tiny mistakes this way) and the links still work I’ve been more like an archivist than a coder. My favourite discovery, and shock, was that I found that RAP (Reproducible Analytical Pipelines) was shared with the NHS-R Community in 2018 although I only really heard about it from 2020. It was very much like the moment I experienced when I went through my old Geography school books and found I’d been taught in those lessons about Index of Multiple Deprivation (IMD) but I had absolutely no recollection of it at all! It hadn’t been the right time for me to really hear about it and yet in time, it’s become something that I now really love working with. You can read more about IMD in a Quarto collaborative book for NHS-R Community called <a href="https://health-inequalities.nhsrcommunity.com/content/imd.html">Health Inequalities</a>.</p>
</section>
</section>
<section id="contributions-are-welcome" class="level2">
<h2 class="anchored" data-anchor-id="contributions-are-welcome">Contributions are welcome!</h2>
<p>Knowing where to start with contributions can be a barrier so I’ve written out a few things to try to help people do this. Firstly, our Quarto book (yes another one - they are additive be warned!) <a href="https://tools.nhsrcommunity.com/contribution.html">Statement on Tools</a> includes some technical appendices including Contributing to <a href="https://tools.nhsrcommunity.com/contribution.html">GitHub repositories</a>.</p>
<p>If you want to get involved with the NHS-R Community more generally we are building on the <a href="https://nhsrway.nhsrcommunity.com/community-handbook.html">NHS-R Way</a> which essentially documents the community. We’ve got a number of activities listed out and these are all open to get involved with, or set up something else.</p>
<p>We can be found, as a community, in <a href="https://nhsrway.nhsrcommunity.com/community-handbook.html#slack">Slack</a> and our central email is <a href="nhs.rcommunity@nhs.net">nhs.rcommunity@nhs.net</a>.</p>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-turner2024" class="csl-entry quarto-appendix-citeas">
Turner, Zoë. 2024. <span>“Building a Quarto Website for NHS-R
Community.”</span> February 24, 2024. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/building-a-quarto-website.html">https://nhs-r-community.github.io/nhs-r-community//blog/building-a-quarto-website.html</a>.
</div></div></section></div> ]]></description>
  <category>Reflections</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/building-a-quarto-website.html</guid>
  <pubDate>Sat, 24 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Navigating the Data-Driven Frontier: Insights from an NHS-R Committee Member</title>
  <dc:creator>Prajwal Khairnar</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/navigating-the-data-driven-frontier-insights-from-an-nhs-r-committee-member.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<!-- Image by <a href="https://pixabay.com/users/startupstockphotos-690514/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=594090">StartupStockPhotos</a> from <a href="https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=594090">Pixabay</a> -->
<p>Greetings, esteemed members of the NHS-R Community, data enthusiasts, and healthcare aficionados! It is with great excitement that I share my recent journey as a committee member with the NHS-R Community, a vibrant hub dedicated to championing the use of R and data science tools in the UK health and care system.</p>
<section id="the-community" class="level2">
<h2 class="anchored" data-anchor-id="the-community">The Community</h2>
<p>Established in 2018, the NHS-R Community has rapidly evolved into a dynamic collective of professionals from diverse backgrounds. Our community encompasses members from public sector organizations, including Local Authorities and Civil Service, academia, and the voluntary sector. We are united by a shared passion for advancing healthcare through the transformative power of data. While our core language is R, we are equally enthusiastic about embracing a broad spectrum of data science tools, recognizing their integral role in shaping the future of healthcare analytics.</p>
</section>
<section id="steering-the-course-the-committees-impact" class="level2">
<h2 class="anchored" data-anchor-id="steering-the-course-the-committees-impact">Steering the Course: The Committee’s Impact</h2>
<p>As a committee member, my role involves active participation in shaping the community’s approach, focus, and overall strategy. We meet regularly to deliberate on initiatives, conferences, and the overarching direction for the community. The committee serves as a crucial forum for collective decision-making, ensuring that our initiatives align with the evolving needs of the community and contribute to positive change.</p>
</section>
<section id="committee-meetings-a-glimpse-into-our-world" class="level2">
<h2 class="anchored" data-anchor-id="committee-meetings-a-glimpse-into-our-world">Committee Meetings: A Glimpse into Our World</h2>
<p>Our meetings are a lively exchange of ideas, experiences, and visions for the future. Whether we’re brainstorming innovative projects, refining strategies, or planning impactful conferences, each committee member brings a unique perspective to the table. The collaborative spirit is palpable as we navigate the dynamic landscape of data science in healthcare.</p>
</section>
<section id="driving-positive-change" class="level2">
<h2 class="anchored" data-anchor-id="driving-positive-change">Driving Positive Change</h2>
<p>Being part of the committee means playing a pivotal role in fostering collaboration and steering the community toward meaningful outcomes. We celebrate diversity in thought and expertise, recognizing that it is the key to unlocking the full potential of data science in healthcare.</p>
</section>
<section id="contributions-welcome" class="level2">
<h2 class="anchored" data-anchor-id="contributions-welcome">Contributions Welcome</h2>
<p>One of the hallmarks of our community is the open invitation for contributions. Our GitHub repository: <a href="https://github.com/nhs-r-community">NHS-R Community</a> hosts a wealth of resources, including packages and training materials, and we wholeheartedly welcome contributions from community members. It’s an empowering experience to witness the collective impact of our shared knowledge and skills.</p>
</section>
<section id="join-the-conversation" class="level2">
<h2 class="anchored" data-anchor-id="join-the-conversation">Join the Conversation</h2>
<p>If you’re passionate about data science, healthcare, and making a positive impact, the NHS-R Community is the place to be. Whether you’re an R enthusiast, a data science wizard, or a healthcare professional with an interest in analytics, there’s a place for you in our diverse and welcoming community.</p>
<p>As I continue my journey as a committee member, I’m excited about the endless possibilities that lie ahead. Together, we’re shaping the future of healthcare analytics, one R script at a time.</p>
<p>Stay tuned for more updates from the NHS-R Community, where data meets healthcare, and innovation knows no bounds. See you in the data-driven frontier!</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-khairnar2024" class="csl-entry quarto-appendix-citeas">
Khairnar, Prajwal. 2024. <span>“Navigating the Data-Driven Frontier:
Insights from an NHS-R Committee Member.”</span> February 6, 2024. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/navigating-the-data-driven-frontier-insights-from-an-nhs-r-committee-member.html">https://nhs-r-community.github.io/nhs-r-community//blog/navigating-the-data-driven-frontier-insights-from-an-nhs-r-committee-member.html</a>.
</div></div></section></div> ]]></description>
  <category>Committee</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/navigating-the-data-driven-frontier-insights-from-an-nhs-r-committee-member.html</guid>
  <pubDate>Tue, 06 Feb 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nhs-r-community.github.io/nhs-r-community/blog/img/startup.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Success story - Kate Cheema, Director of Health Intelligence, British Heart Foundation</title>
  <dc:creator>Kate Cheema</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/success-story-kate-cheema.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<section id="tell-us-a-bit-about-yourself-your-team-and-how-your-story-begins" class="level1">
<h1>Tell us a bit about yourself, your team and how your story begins?</h1>
<p>The Health Intelligence team at the British Heart Foundation just about still qualifies as a ‘new’ team at the stately age of 2-and-a-bit years. Our remit is to collate and analyse a wide range of data related to cardiovascular disease and its treatment and outcomes across the UK and use this to provide critical insight and context to the BHF’s charitable mission work. Some of our work is population focussed, understanding the patterns and trends in CVD prevalence and incidence. Some is more system focussed, getting under the skin of variation in care for CVD patients and learning more about how patients are impacted by service change. And still more is supporting particular programmes of work, such as the National Defibrillator Network or our community mobilisation projects. You’ll see our numbers in BHF adverts and occasionally one of us gets wheeled out to talk stats on local radio. Lots to do! We’re a small team, just 5.5 people, serving a large organisation so we need to work smart.</p>
</section>
<section id="what-was-the-problemchallenge-you-were-trying-to-address" class="level1">
<h1>What was the problem/challenge you were trying to address?</h1>
<p>CVD is a complex and varied group of illnesses and the data describing it can be very nuanced. Pair that with an organisation that needs to use it for comms and media work, as well as informing strategy and programmes of work and the result is the need for a hybrid model of delivery that does the basics brilliantly, allows for easy ‘self serve’ and frees up time to support colleagues with the complex stuff. So our challenge was to build a library of core resources for internal use, as automated as possible and presented in an accessible format for all colleagues to use.</p>
</section>
<section id="how-r-helped-you-any-particular-librariesproductspackages-you-found-the-most-useful" class="level1">
<h1>How R helped you? Any particular libraries/products/packages you found the most useful?</h1>
<p>R has been invaluable in the whole project to date (still lots to do!) but two specific resources spring to mind. Firstly, the Tidyverse suite of packages has been invaluable in streamlining, and making repeatable, our data reshaping. Much of the publicly available data we use is downloaded from websites and is (ahem) not exactly in a useful format. Having standardised, and generally very simple, reshaping scripts to reuse across the team has saved hours of time, not to mention to ability to automate the download in the first place (kudos to ::curl::).</p>
<p>Secondly, we have utilised R Markdown extensively in the automated production of simple off-the-(Sharepoint)-shelf PDF based reports. Accessible to all, impossible to break (famous last words) these generally take the form of a key set of data visualisations of a specific topic, usually rendered using ggplot2 but also using network visualisation packages (::network::, ::igraph::, ::tidygraph:: ) and n-gram analysis of text data (::tidytext::) where required.</p>
</section>
<section id="what-is-the-result" class="level1">
<h1>What is the result?</h1>
<p>The beginnings of a library accessible to all in the BHF and a decent chunk of time saved. A couple of our reports are scheduled to run and publish automatically with zero intervention from the team outside of checking it’s there. We’ve used R in other standalone projects (for example forecasting work, network analysis as part of an evaluation project) too. We’re in the process of improving our R capability, in terms of skills and in terms of infrastructure, so this is really just the start of the story for us.</p>
<p>This blog has been formatted to remove <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#avoid-latin-abbreviation">Latin Abbreviations</a>.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-cheema2022" class="csl-entry quarto-appendix-citeas">
Cheema, Kate. 2022. <span>“Success Story - Kate Cheema, Director of
Health Intelligence, British Heart Foundation.”</span> March 21, 2022.
<a href="https://nhs-r-community.github.io/nhs-r-community//blog/success-story-kate-cheema.html">https://nhs-r-community.github.io/nhs-r-community//blog/success-story-kate-cheema.html</a>.
</div></div></section></div> ]]></description>
  <category>Reflections</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/success-story-kate-cheema.html</guid>
  <pubDate>Mon, 21 Mar 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Success story - Dr Lydia Briggs, Data Scientist, GOSH</title>
  <dc:creator>Lydia Briggs</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/success-story-lydia-briggs.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<section id="what-was-the-problemchallenge-you-were-trying-to-address" class="level1">
<h1>What was the problem/challenge you were trying to address?</h1>
<p>Hospital surgical teams regularly hold meetings to discuss cases and events that have happened in their departments. The patient data to be discussed can be complicated and varied, requiring analysts to manually go through many notes, reports and summaries in the electronic patient record system. By developing an extraction process and incorporating generalizable coding with R, this lengthy and manual process can be automated and can save valuable hours of analyst time.</p>
</section>
<section id="how-has-r-helped-you-any-particular-librariesproductspackages-you-found-the-most-useful" class="level1">
<h1>How has R helped you? Any particular libraries/products/packages you found the most useful?</h1>
<p>R is a useful tool for this project as it allows for easy linkage of different datasets at the patient level and allows for informative visualisation. For example, a patient who is currently in the cardiology ward can easily be linked to their hospital admission history, previous procedures, laboratory results and so on and the breadth of this information can be shown in an interactive time line plot using <code>ggplot2</code> and <code>plotly</code>. As the data is extracted on a weekly basis, a {targets} pipeline has been beneficial in saving processing time and in compartmentalising the features and functions.</p>
</section>
<section id="what-is-the-result" class="level1">
<h1>What is the result?</h1>
<p>We developed a <code>targets</code> pipeline which outputs a markdown report and a shiny app which displays the features required by the hospital department. A shiny app allows the department to interact with the data through selecting features and plotly timeline visualisations. Due to the ease of joining datasets together using R, more information can be provided and presented in the department meetings in an easy to understand format.</p>
<p>This blog has been formatted to remove <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#avoid-latin-abbreviation">Latin Abbreviations</a>.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-briggs2022" class="csl-entry quarto-appendix-citeas">
Briggs, Lydia. 2022. <span>“Success Story - Dr Lydia Briggs, Data
Scientist, GOSH.”</span> March 21, 2022. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/success-story-lydia-briggs.html">https://nhs-r-community.github.io/nhs-r-community//blog/success-story-lydia-briggs.html</a>.
</div></div></section></div> ]]></description>
  <category>Reflections</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/success-story-lydia-briggs.html</guid>
  <pubDate>Mon, 21 Mar 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Success story - Dr William Bryant, Senior Data Scientist, GOSH</title>
  <dc:creator>William Bryant</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/success-story-william-bryant.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<section id="the-challenge" class="level1">
<h1>The Challenge:</h1>
<p>To create a template workflow for a stream of analytics and data presentation projects for research and operational use at GOSH. To ensure that the codebase is: interpretable, reusable &amp; maintainable and to control technical debt around the solutions we provide, so that they can be handed over to other technical teams in the Trust.</p>
</section>
<section id="the-solution" class="level1">
<h1>The Solution:</h1>
<p>We have created a ‘Data Science’ template, inspired by Cookiecutter Data Science and using the <code>targets</code> R package to logically break down code into small reusable chunks applied to our research datasets.</p>
</section>
<section id="the-results" class="level1">
<h1>The Results:</h1>
<p>We are now running (and have completed) a number of projects from estimation of surgery lengths with XGBOOST, to dashboarding cardiac data for MDTs, to creating articles on historic data trends at GOSH and many more. This has provided us a rich common codebase applicable in all sorts of contexts, as well as giving us a headstart when understanding each other’s code and collaborating on development.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-bryant2022" class="csl-entry quarto-appendix-citeas">
Bryant, William. 2022. <span>“Success Story - Dr William Bryant, Senior
Data Scientist, GOSH.”</span> March 21, 2022. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/success-story-william-bryant.html">https://nhs-r-community.github.io/nhs-r-community//blog/success-story-william-bryant.html</a>.
</div></div></section></div> ]]></description>
  <category>Reflections</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/success-story-william-bryant.html</guid>
  <pubDate>Mon, 21 Mar 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Count of working days function</title>
  <dc:creator>Zoë Turner</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/count-of-working-days-function.html</link>
  <description><![CDATA[ <!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html --><!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
--><!-- <header id="title-block-header" class="quarto-title-block default page-columns"> --><!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> --><!-- Image by <a href="https://pixabay.com/users/ronporter-291009/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=429277">Ron Porter</a> from <a href="https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=429277">Pixabay</a> --><p>It’s at this time of year I need to renew my season ticket and I usually get one for the year. Out of interest, I wanted to find out how much the ticket cost per day, taking into account I don’t use it on weekends or my paid holidays. I started my workings out initially in Excel but got as far as typing the formula <code>=WORKDAYS()</code> before I realised it was going to take some working out and perhaps I should give it a go in R as a function…</p>
<p>Chris Beeley had recently shown me functions in R and I was surprised how familiar they were as I’ve seen them on Stack Overflow (usually skimmed over those) and they are similar to functions in SQL which I’ve used (not written) where you feed in parameters.</p>
<p>When I write code I try to work out how each part works and build it up but writing a function requires running the whole thing and then checking the result, the objects that are created in the function do not materialise so are never available to check. Not having objects building up in the environment console is one of the benefits of using a function, that and not repeating scripts which then ALL need updating if something changes.</p>
<section id="bus-ticket-function" class="level2"><h2 class="anchored" data-anchor-id="bus-ticket-function">Bus ticket function</h2>
<p>This is the final function which if you run you’ll see just creates a function.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Week starts on Sunday (1)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DailyBusFare_function</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">StartDate</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">EmployHoliday</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Cost</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">wfh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dmy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">StartDate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">endDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/as.Date.html">as.Date</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%m+%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/weekday.POSIXt.html">months</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Now build a sequence between the dates:</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/seq.html">seq</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>from <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span>, to <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">endDate</span>, by <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"days"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">working_days</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wday</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wday</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">holidayLONDON</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>year <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lubridate</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/year.html">year</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">EmployHoliday</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">wfh</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">per_day</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">working_days</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">per_day</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>Running the function you feed in parameters which don’t create their own objects:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DailyBusFare_function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11/07/2019"</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">612</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>[1] 2.707965</p>
</section><section id="going-through-each-line" class="level2"><h2 class="anchored" data-anchor-id="going-through-each-line">Going through each line:</h2>
<p>To make sure each part within the function works it’s best to write it in another script or move the bit betweeen the curly brackets <code><a href="https://rdrr.io/r/base/Paren.html">{}</a></code>.</p>
<p>Firstly, the <code>startDate</code> is self explanatory but within the function I’ve set the <code>endDate</code> to be dependent upon the <code>startDate</code> and be automatically 1 year later.</p>
<p>Originally when I was trying to find the “year after” a date I found some documentation about {lubridate}’s function <code>dyear()</code>:</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Next couple of lines needed to run the endDate line!</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org">lubridate</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/ymd.html">dmy</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11/07/2019"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">endDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/duration.html">dyears</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>but this gives an exact year after a given date and doesn’t take into account leap years. I only remember this because 2020 will be a leap year so the end date I got was a day out!</p>
<p>Instead, Chris Beeley suggested the following:</p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">endDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/as.Date.html">as.Date</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/mplus.html">%m+%</a></span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/weekday.POSIXt.html">months</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>Next, the code builds a sequence of days. I got this idea of building up the days from the blogs on getting days between two dates but it has also come in use when plotting over time in things like SPCs when some of the time periods are not in the dataset but would make sense appearing as 0 count.</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org">lubridate</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># To run so that the sequencing works</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># using as.Date() returns incorrect date formats 0011-07-20 so use dmy from</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lubridate to transform the date</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/ymd.html">dmy</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11/07/2019"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">endDate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/as.Date.html">as.Date</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/mplus.html">%m+%</a></span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/weekday.POSIXt.html">months</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Now build a sequence between the dates:</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/seq.html">seq</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>from <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span>, to <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">endDate</span>, by <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"days"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>All of these return values so trying to open them from the Global Environment won’t do anything. It is possible view the first parts of the values but also typing:</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compactly displays the structure of object, including the format (date in this case)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/str.html">str</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Date[1:367], format: "2019-07-11" "2019-07-12" "2019-07-13" "2019-07-14" "2019-07-15" ...</code></pre>
</div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gives a summary of the structure</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/summary.html">summary</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. 
"2019-07-11" "2019-10-10" "2020-01-10" "2020-01-10" "2020-04-10" "2020-07-11" </code></pre>
</div>
</div>
<p>To find out what a function does type <code><a href="https://rdrr.io/r/utils/str.html">?str</a></code> or<code><a href="https://rdrr.io/r/base/summary.html">?summary</a></code> in the console. The help file will then appear in the bottom right Help screen.</p>
<p>Next I worked out <code>working_days.</code> I got the idea from a blog which said to use length and which:</p>
<div class="cell">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">working_days</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/which.html">which</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/day.html">wday</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/day.html">wday</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>Note that the value appears as <code>262L</code> which is a count of a logical vector. Typing <code><a href="https://rdrr.io/r/base/logical.html">?logical</a></code> into the Console gives this in the Help:</p>
<p><em>Logical vectors are coerced to integer vectors in contexts where a numerical value is required, with TRUE being mapped to 1L, FALSE to 0L and NA to NA_integer</em>._</p>
<p>I was familiar with <code><a href="https://rdrr.io/r/base/length.html">length()</a></code>, it does a count essentially of factors or vectors (type <code><a href="https://rdrr.io/r/base/length.html">?length</a></code> into the Console for information) but <code><a href="https://rdrr.io/r/base/which.html">which()</a></code> wasn’t something I knew about. Chris Beeley explained what which does with the following example:</p>
<div class="cell">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate a list of random logical values</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sample.html">sample</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, replace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look at list</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE</code></pre>
</div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># using which against the list gives the number in the list where the logic = TRUE</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/which.html">which</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 8</code></pre>
</div>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># counts how many logical arguments in the list (should be 10)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 10</code></pre>
</div>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># counts the number of TRUE logical arguments</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/which.html">which</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
</div>
<p>Then Chris Beeley suggested just using <code>sum</code> instead of <code>length(which())</code> which counts a logical vector:</p>
<div class="cell">
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
</div>
<p>It seems this has been discussed on Stack Overflow before: <a href="https://stackoverflow.com/questions/2190756/how-to-count-true-values-in-a-logical-vector">https://stackoverflow.com/questions/2190756/how-to-count-true-values-in-a-logical-vector</a></p>
<p>It’s worthy of note that using sum will also count <code>NA</code>s so the example on Stack overflow suggest adding:</p>
<div class="cell">
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span>, na.rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
</div>
<p>This won’t affect the objects created in this blog as there were no <code>NA</code>s in them but it’s just something that could cause a problem if used in a different context.</p>
<div class="cell">
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">working_days</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/day.html">wday</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/day.html">wday</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Just to check adding na.rm = TRUE gives the same result</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">working_days</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/day.html">wday</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/day.html">wday</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">myDates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, na.rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>I then wanted to take into account bank/public holidays as I wouldn’t use the ticket on those days so I used the function <code>holidayLONDON(</code> from the package {timeDate}:</p>
<div class="cell">
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">holidayLONDON</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>year <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lubridate</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://lubridate.tidyverse.org/reference/year.html">year</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">startDate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 8</code></pre>
</div>
</div>
<p>I used <code><a href="https://lubridate.tidyverse.org/reference/year.html">lubridate::year</a></code> because the package {timeDate} uses a parameter called year so the code would read <code>year = year(startDate)</code> which is confusing to me let alone the function!</p>
<p>Again, I counted the vectors using <code><a href="https://rdrr.io/r/base/length.html">length()</a></code>. This is a crude way of getting bank/public holidays as it is looking at a calendar year and not a period (July to July in this case).</p>
<p>I did look at a package called {bizdays} but whilst that seemed to be good for building a calendar I couldn’t work out how to make it work so I just stuck with the {timeDate} package. I think as I get more confident in R it might be something I could look into the actual code for because all packages are open source and available to view through CRAN or GitHub.</p>
<p>Back to the function…</p>
<p>I then added <code>- EmployHoliday</code> so I could reduce the days by my paid holidays and <code>- wfh</code> to take into account days I’ve worked from home and therefore not travelled into work.</p>
<p>The next part of the code takes the entered <code>Cost</code> and divides by the <code>Working_days</code>, printing the output to the screen:</p>
<p><code>per_day &lt;- Cost/working_days</code></p>
<p><code>print(per_day)</code></p>
<p>And so the answer to the cost per day is printed in the Console:</p>
<div class="cell">
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DailyBusFare_function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11/07/2019"</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">612</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2.707965</code></pre>
</div>
</div>
</section><section id="a-conclusion-of-sorts" class="level2"><h2 class="anchored" data-anchor-id="a-conclusion-of-sorts">A conclusion… of sorts</h2>
<p>Whilst this isn’t really related to the NHS it’s been useful to go through the process of producing a function to solve a problem and then to explain it, line by line, for the benefit of others.</p>
<p>I’d recommend doing this to further your knowledge of R at whatever level you are and particularly if you are just learning or consider yourself a novice as sometimes blogs don’t always detail the reasons why things were done (or why they were not done because it all went wrong!).</p>


</section><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-turner2019" class="csl-entry quarto-appendix-citeas">
Turner, Zoë. 2019. <span>“Count of Working Days Function.”</span> July
16, 2019. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/count-of-working-days-function.html">https://nhs-r-community.github.io/nhs-r-community//blog/count-of-working-days-function.html</a>.
</div></div></section></div> ]]></description>
  <category>Functions</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/count-of-working-days-function.html</guid>
  <pubDate>Mon, 15 Jul 2019 23:00:00 GMT</pubDate>
  <media:content url="https://nhs-r-community.github.io/nhs-r-community/blog/img/travelcard.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>A run chart is not a run chart is not a run chart</title>
  <dc:creator>Jacob Anhøj</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/a-run-chart-is-not-a-run-chart-is-not-a-run-chart.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<section id="understanding-variation-using-runs-analysis" class="level1">
<h1>Understanding variation using runs analysis</h1>
<p>Run charts are simple and powerful tools that help discriminate between random and non-random variation in data over time – for example, measures of healthcare quality.</p>
<p>Random variation is present in all natural processes. In a random process we cannot know the exact value of the next outcome, but from studying previous data we may predict the probability of future outcomes. So, a random process is predictable. Non-random variation, on the other hand, appears when something new, sometimes unexpected, starts to influence the process. This may be the result of intended changes made to improve the process or unintended process deterioration. The ability to tell random from non-random is crucial in quality improvement. One way of achieving this is runs analysis.</p>
<p>In general, a run is defined as a sequence of like items that is preceded and followed by one or more items of another type or by no item. Items can be heads and tails, odd and even numbers, numbers above and below a certain value, and so on.</p>
<p>Runs analysis is based on knowledge of the natural distributions and limits of run lengths and the number of runs in random processes. For example, if we toss a coin 10 times and get all heads (1 run of length 10), we would think that something non-random is affecting the game. Likewise, if a run chart includes a run of 10 data points on the same side of the centre line, we would start looking for an explanation.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/run-chart.png" class="img-fluid figure-img"></p>
<figcaption>Figure 1: Run charts from random numbers. A: random variation. B: non-random variation in the form of an upwards shift introduced after data point number 16 and identified by unusually long and few runs and signalled by a red, dashed centre line. See text for details on how to identify non-random variation.</figcaption>
</figure>
</div>
<p>Specifically, a run chart may be regarded as a coin tossing game where the data points represent heads and tails depending on their position above and below the centre line (ignoring data points that fall directly on the centre line). If the process is random, the data points will be randomly distributed around the centre (Figure 1A). A shift in process location will affect the distribution of data points and will eventually present itself by non-random patterns in data, which can be identified by statistical tests (Figure 1B).</p>
<p>Swed and Eisenhart studied the expected number of runs in random sequences. If the number of runs is too small or too large, it is an indication that the sequence is not random (1). To perform Swed and Eisenhart’s runs test one must either do rather complicated calculations or look up the limits for the expected number of runs in tables based on the total number of runs in the sequence and the number of items of each kind. Simplified tables for use with run charts have been developed for up to 60 data points (2). For more than 60 data points, the limits can be calculated using the normal approximation of the runs distribution function (3). For example, in a run chart with 24 data points, the expected number of runs (95% prediction limits) is 8-18.</p>
<p>Chen proposed an alternative to Swed and Eisenhart’s method. Instead of counting the number of runs, Chen counts the number of shifts in the sequence, i.e.&nbsp;when a value of one kind is followed by a value of another kind, which is one less than the number of runs (4). To avoid confusing Chen’s shifts in sequence with shifts in process location, I use the term crossings.</p>
<p>In run charts, crossings are easily counted by counting the number of times the graph crosses the median line. If the process is random, the chance of crossing or not crossing the median line between two adjacent data points is fifty-fifty. Thus, the total number of crossings has a binomial distribution, <strong><em>b(n−1,0.5)</em></strong>, where <strong><em>n</em></strong> is the number of data points and <strong><em>0.5</em></strong> is the success probability.</p>
<p>We should consider whether we are interested in both sides of the distribution, too few and/or too many crossings. By nature, a shift in process location following process improvement or deterioration will result in fewer crossings than expected. But unusually many crossings (oscillation) is also a sign of non-random variation, which will appear if data are negatively autocorrelated, that is, if any high number tends to be followed by a low number and vice versa. However, oscillation is not an effect of the process shifting location, but most likely a result of a poorly designed measure or sampling issues (5 p175). Chen recommends using one-sided tests suited for the purpose of the analysis, i.e.&nbsp;whether one is interested in detecting shifts or oscillations (4).</p>
<p>For example, for a run chart with 24 data points we could choose the lower fifth percentile of the cumulative binomial distribution of 23 trials with a success probability of 0.5 as our critical value for the lower limits of crossings. This is easily calculated in R using the <code>qbinom()</code> function, <code>qbinom(p = 0.05, size = 24 - 1, prob = 0.5) = 8</code>, i.e.&nbsp;fewer than 8 crossings would be unusual and suggest that the process is shifting. In Figure 1B non-random variation in the form of a shift is identified by the fact that the chart has only 6 crossings when at least 8 would be expected from 24 random numbers.</p>
<p>The number of crossings (and runs) is inversely related to the lengths of runs. All things being equal, fewer crossings give longer runs and vice versa. Therefore, a test for unusually long runs is also commonly used as a means to identify shifts. A simple example is the “classic” rule of thumb of a run of 8 or more data points on the same side of the centre line. But just like the expected number of crossings, the expected length of the longest run depends on the total number of data points. In a run chart with, say, 100 data points, we should not be surprised to find a run of 8.</p>
<p>The distribution of longest runs has been described in detail by Schilling (6–8). The expected length of the longest run either above or below the median is <code>log2(n)</code>, where n is the total number of data points, excluding data points that fall directly on the centre line. Approximately 95% of the longest runs are predicted to be within <code>±3</code> of the expected value. For the purpose of detecting a shift, we are interested in the upper prediction limit for longest run, which is <code>log2(n)+3</code> (rounded to the nearest integer). For example, in a run chart of 24 data points, the upper 95% prediction limit for the longest run is <code>round(log2(24) + 3) = 8</code>, i.e.&nbsp;a run of more than 8 indicates a shift. Figure 1B has an unusually long run of 9 consecutive data points on the same side of the centre line.</p>
<p>A trend is a special form of a run, where like items are defined as data points that are bigger or smaller than the preceding one. The trend test was developed by Olmstead who provided tables and formulas for the probabilities of trends of different lengths depending on the total number of data points (9). For example, with less than 27 data points in total, the chance of having a trend of 6 or more data points going up or down is less than 5%. Note that Olmstead defines a trend as the number of jumps rather than the number of data points that surround the jumps.</p>
<p>In summary, there are (at least) four unusual run patterns that may be used to identify non-random variation in run charts:</p>
<ul>
<li>Too many runs<br>
</li>
<li>Too few runs<br>
</li>
<li>Too long runs<br>
</li>
<li>Too long trends</li>
</ul>
<p>The selection of rules and the choice of critical values to define <em>too many</em>, <em>too few</em> and <em>too long</em> have significant influence on the statistical properties of run charts. This is the subject of the following sections.</p>
</section>
<section id="signal-confusion" class="level1">
<h1>Signal confusion</h1>
<p>Compared to control charts, surprisingly little has been published on the statistical properties of run charts (2, 10–13).</p>
<p>Carey introduced four run chart rules(10):</p>
<p>too much variability: more runs than expected, too little variability: fewer runs than expected, a shift: a run of 8 or more data points on the same side of the median (if less than 20 data points in total, a run of 7 suggests a shift), a trend: a run of 6 (or 7) data points going up or down. Carey provided a probability table showing the expected range of number of runs based on Swed’s work (1).</p>
<p>Perla, Provost, and Murray suggested a different set of run chart rules (2):</p>
<p>a shift: a run of 6 or more data points on the same side of the median, a trend: a run of 5 data points going up or down, too much variability: more runs than expected, too little variability: fewer runs than expected, an astronomical data point: an unusually large or small number. Perla’s rules differ from Carey’s mainly in that the critical values used to detect shifts and trends are relaxed. Perla notes that rules 1-4 are based on an α error of p&lt;0.05. However, the source of this information is unclear. Also, Perla does not tell whether the α error applies to each individual rule or the set as a whole.</p>
<p>Finally, Olesen and I have proposed yet another set of run chart rules, which – for lack of a better term – I refer to as the Anhøj rules (11):</p>
<p>Shift rule: A shift is present if any run of consecutive data points on the same side of the median is longer than its prediction limit. Crossings rule: A crossings signal is present if the number of times the graph crosses the median is smaller than its prediction limit. The prediction limits for longest run and number of crossings both depend on the number of useful observations (data points not on the median) and are based on the works of Schilling (8) and Chen (4) as described in the previous section. Prediction limits for 10-60 data points are tabulated in the appendix.</p>
<p>In general, the Anhøj rules are more conservative (less sensitive, more specific) than the Carey and Perla rules. For example, with 24 data points the Anhøj rules take a run of 9 to signal a shift, while Perla and Carey only take 6 and 8, respectively (Figure 2).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/run-chart-anhoej-rules.png" class="img-fluid figure-img"></p>
<figcaption>Figure 2: Run chart with random variation according to the Carey and Anhøj rules but with both a shift and a trend according to the Perla rules. The chart has 30 observations of which 27 are not on the median. The longest run has 6 data points below the median, there are 11 crossings, and the longest trend has 6 data points (excluding a tie) going down.</figcaption>
</figure>
</div>
</section>
<section id="which-rules-to-rule" class="level1">
<h1>Which rules to rule?</h1>
<p>So, which run chart rules are best? To answer that question, we need to agree on what we mean by “best”. The purpose of any data display is to help us make good decisions. The link between data and decisions is prediction. As W Edwards Deming put it</p>
<blockquote class="blockquote">
<p>A curve fitted to a set of points is of interest, not on account of the data fitted, but because of data not yet fitted. How will this curve fit the next batch of data?.</p>
</blockquote>
<p>Specifically, regarding run charts, the question of interest is: how well does the centre (e.g.&nbsp;median) of historical data represent the centre of future data? In a random process, historical data reliably predicts future data. In a non-random process, this may or may not be the case. In practice, however, we cannot know in advance if a process is random or non-random, which is why we need statistical tests (rules) to help us make the distinction. But even the most reliable statistical tests make mistakes by sometimes overlooking the condition being tested for (false negative) and sometimes identifying a condition that is not there (false positive).</p>
<p>The questions of interest for run chart users are what is the chance that a chart with a positive test really represents non-random variation? and what is the chance that a chart with a negative test really represents random variation?</p>
<p>Likelihood ratios are diagnostic measures designed to answer such questions. The positive likelihood ratio, LR+, is the true positive rate divided by the false positive rate. The negative likelihood ratio, LR–, is the false negative rate divided by the true negative rate:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ALR+=TP/FP=sensitivity/(1%E2%88%92specificity)%0A"> <img src="https://latex.codecogs.com/png.latex?%0ALR%E2%88%92=FN/TN=(1%E2%88%92sensitivity)/specificity%0A"> A likelihood ratio greater than 1 speaks in favour of the condition being tested for, which in our case is non-random variation, while a likelihood ratio less than 1 speaks against the presence of non-random variation. The further a likelihood ratio is from 1, the more or less likely is the presence of non-random variation.</p>
<p>Thus, likelihood ratios allow us to quantify the probability of non-random variation in data sequences and are useful quality characteristics of run (and control) chart rules.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/likelihood-ratios-run-charts.png" class="img-fluid figure-img"></p>
<figcaption>Figure3: Likelihood ratios of different sets of run chart rules. See text for details.</figcaption>
</figure>
</div>
<p>In <em>Run chart diagnostics</em> I studied and compared likelihood ratios for the Perla, Carey and Anhøj rules (12) using simulated random data series to mimic run charts.</p>
<p>In half the simulations, a shift in process mean of 2 SD was introduced. So, for each simulated run chart the true presence or absence of a shift together with the presence or absence of signals from the runs analyses was known by the simulation program allowing the program to calculate likelihood ratios for each set of run chart rules.</p>
<p>For each simulated data series, the median was calculated using the first 6, 12 or 18 data points as baseline. And the shifts (when present) were introduced in the post-baseline period of 6, 12 or 18 data points. Consequently, there were nine combinations of baseline and post-baseline periods of different lengths allowing me to study the influence of these parameters on the diagnostic value of the tests.</p>
<p>For each of the nine possible combinations of baseline and post-baseline length, 1,000 simulations were performed with and 1,000 without post-baseline shift. In total, 18,000 run charts were simulated.</p>
<p>The results are summarised in Figure 3. Overall, the Anhøj and Carey rules perform “better” than the Perla rules – the Anhøj rules slightly but consistently better than the Carey rules. For run charts with 12 or more data points in the post-baseline period, the Anhøj and Carey rules perform very well with positive LRs around 10 and negative LRs around 0.1. The interpretation is, that given a positive test based on the Anhøj or Carey rules, the presence of a shift of 2 SD is about 10 times more likely than no shift; and given a negative test, a shift is about 10 times less likely than no shift.</p>
<p>In the previous paragraph, I use the term “better” to describe likelihood ratios with a wide and symmetric range centered around 1. Symmetry is important if we want equal protection from false positive and false negative results. The Perla rules have very low negative LRs meaning that negative tests with great certainty rule out shifts. However, they also have low positive LRs suggesting that positive tests are only 2–4 times more likely to be associated with true shifts in process performance than not.</p>
<p>The main reason for the low value of positive tests signalled by the Perla rules is the trend rule, which has been shown to add little more than false signals to runs analysis(14). In particular, the Perla version of the trend rule (5 point in a row) is flawed, having a false positive signal rate around 20%. But also Perla’s shift rule signalling when only 6 data points in a row is on the same side of the median is responsible for a significant number of false alarms.</p>
</section>
<section id="qicharts2-quality-improvement-charts-with-r" class="level1">
<h1>qicharts2: Quality improvement charts with R</h1>
<p>The {qicharts2} package for R(15) employs the Anhøj rules as standalone rules with run charts and as sensitising rules with control charts (Figure 3).</p>
<p>The latest stable version of {qicharts2} can be installed from CRAN:</p>
<p><code>install.packages('qicharts2')</code></p>
<p>The current development version can be installed from GitHub:</p>
<p><code>devtools::install_github('anhoej/qicharts2', build_vignettes = TRUE)</code></p>
<p>Along with the package comes a vignette that explains its use and provides several examples using actual healthcare data:</p>
<p><a href="https://anhoej.github.io/qicharts2/articles/qicharts2.html" class="uri">https://anhoej.github.io/qicharts2/articles/qicharts2.html</a></p>
</section>
<section id="run-charts-or-control-charts" class="level1">
<h1>Run charts or control charts?</h1>
<p>It is a common misunderstanding that run charts are inferior to control charts. As Figure 4 clearly demonstrates, the runs analysis is more sensitive to minor persistent shifts in data than are the control limits that only reacts to larger shifts in data. In a recent paper, Tore Wentzel-Larsen and I showed that runs analysis with the Anhøj rules is actually comparable to or even better than traditional control chart rules to identify minor to moderate and <em>persistent</em> shifts in data (16).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/control-chart.png" class="img-fluid figure-img"></p>
<figcaption>Figure 4: Control chart of random normal variables. In the last 8 data points a shift of 2 SD was introduced. All data points are within the control limits, but the shift is signalled by an unusually long run of 9 data points.</figcaption>
</figure>
</div>
<p>In my view, run and control charts are two sides of the same coin, and I refer to them collectively as statistical process control charts. I recommend to always use the Anhøj rules first together with a visual inspection of the run chart for other signs of non-random variation. If – and only if – the run chart finds random variation <em>and</em> the extra sensitivity of control limits to identify larger, possibly transient, shifts in data is needed, a control chart may be useful.</p>
<p>For improvement work, run charts are usually all we need, because we are expecting persistent shifts in data. For quality control – when a process has been stabilised at a satisfactory level – control limits are useful to quickly identify sudden larger unwanted shifts in data.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In conclusion, several sets of run chart rules with different diagnostic properties are currently available. The Perla rules recommended by the Institute for Healthcare Improvement (US) and widely used within the National Health Services (UK) have poor diagnostic value mainly due to a high false signal rate. The Anhøj and the Carey rules have better diagnostic properties that reliably tell random from non-random variation and balance the risk of false positive and false negative signals.</p>
<section id="appendix-critical-values-for-longest-run-and-number-of-crossings" class="level2">
<h2 class="anchored" data-anchor-id="appendix-critical-values-for-longest-run-and-number-of-crossings">Appendix: Critical values for longest run and number of crossings</h2>
<p>![Screenshot of critical values for longest run and number of crossings](img/appendix-1-critic</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ol type="1">
<li><p>Swed FS, Eisenhart C. Tables for testing randomness of grouping in a sequence of alternatives. The Annals of Mathematical Statistics [Internet]. 1943 [cited 2018 Oct 7]; 14:66–87. Available from: <a href="http://www.jstor.org/stable/2236004" class="uri">http://www.jstor.org/stable/2236004</a> Accessed 24 March 2024.</p></li>
<li><p>Perla RJ, Provost LP, Murray SK. The run chart: A simple analytical tool for learning from variation in healthcare processes. BMJ Qual Saf [Internet]. 2011 [cited 2018 Oct 7]; 20:46–51. Available from: <a href="http://qualitysafety.bmj.com/content/20/1/46" class="uri">http://qualitysafety.bmj.com/content/20/1/46</a> Accessed 24 March 2024.</p></li>
<li><p>Provost LP, Murray SK. The health care data guide: Learning from data for improvement. San Francisco: John Wiley &amp; Sons Inc.; 2011.</p></li>
<li><p>Chen Z. A note on the runs test. Model Assisted Statistics and Applications [Internet]. 2010 [cited 2018 Oct 7]; 5:73–7. Available from: <a href="https://content.iospress.com/articles/model-assisted-statistics-and-applications/mas00142" class="uri">https://content.iospress.com/articles/model-assisted-statistics-and-applications/mas00142</a> Accessed 24 March 2024.</p></li>
<li><p>Western Electric Company. Statistical quality control handbook. New York: Western Electric Company inc.; 1956.</p></li>
<li><p>Schilling MF. The longest run of heads. The College Mathematics Journal [Internet]. 1990 [cited 2018 Oct 7]; 21:196–207. Available from: <a href="https://www.jstor.org/stable/2686886" class="uri">https://www.jstor.org/stable/2686886</a> Accessed 24 March 2024.</p></li>
<li><p>Schilling MF. Long run predictions. Math Horizons [Internet]. 1994 [cited 2018 Oct 7]; 1:10–2. Available from: <a href="http://www.jstor.org/stable/25677964" class="uri">http://www.jstor.org/stable/25677964</a> Accessed 24 March 2024.</p></li>
<li><p>Schilling MF. The surprising predictability of long runs. Mathematics Magazine [Internet]. 2012 [cited 2018 Oct 7]; 85:141–9. Available from: <a href="http://www.jstor.org/stable/10.4169/math.mag.85.2.141" class="uri">http://www.jstor.org/stable/10.4169/math.mag.85.2.141</a> Accessed 24 March 2024.</p></li>
<li><p>Olmstead PS. Distribution of sample arrangements for runs up and down. The Annals of Mathematical Statistics [Internet]. 1946 [cited 2018 Oct 7]; 17:24–33. Available from: <a href="http://www.jstor.org/stable/2235901" class="uri">http://www.jstor.org/stable/2235901</a> Accessed 24 March 2024.</p></li>
<li><p>Carey RG. How do you know that your care is improving? Part 1: Basic concepts in statistical thinking. J Ambulatory Care Manage. 2002; 25(1):80–7.</p></li>
<li><p>Anhøj J, Olesen AV. Run charts revisited: A simulation study of run chart rules for detection of non-random variation in health care processes. PLoS ONE [Internet]. 2014 [cited 2018 Oct 7]. Available from: <a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0113825" class="uri">https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0113825</a> Accessed 24 March 2024.</p></li>
<li><p>Anhøj J. Diagnostic value of run chart analysis: Using likelihood ratios to compare run chart rules on simulated data series. PLoS ONE [Internet]. 2015 [cited 2018 Oct 7]. Available from: <a href="http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0121349" class="uri">http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0121349</a> Accessed 24 March 2024.</p></li>
<li><p>Anhøj J, Wentzel-Larsen T. Sense and sensibility: On the diagnostic value of control chart rules for detection of shifts in time series data. BMC Medical Research Methodology [Internet]. 2018 [cited 2018 Oct 7]. Available from: <a href="https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/s12874-018-0564-0" class="uri">https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/s12874-018-0564-0</a> Accessed 24 March 2024.</p></li>
<li><p>Davis RB, Woodall WH. Performance of the control chart trend rule under linear shift. Journal of Quality Technology. 1988; 20:260–2.</p></li>
<li><p>Anhøj J. Qicharts2: Quality improvement charts for r. JOSS [Internet]. 2018 [cited 2018 Oct 7]. Available from: <a href="https://joss.theoj.org/papers/10.21105/joss.00699" class="uri">https://joss.theoj.org/papers/10.21105/joss.00699</a> Accessed 24 March 2024.</p></li>
<li><p>Anhøj J, Hellesøe A-MB. The problem with red, amber, green: The need to avoid distraction by random variation in organisational performance measures. BMJ Qual Saf [Internet]. 2016 [cited 2018 Oct 7]. Available from: <a href="https://qualitysafety.bmj.com/content/26/1/81" class="uri">https://qualitysafety.bmj.com/content/26/1/81</a> Accessed 24 March 2024.</p></li>
</ol>
<p>This article is based on previously published, peer reviewed articles and large portions of the text has been copied from its sources and has been edited for <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#referencing-r-packages-and-functions-in-text">NHS-R Style</a> and to ensure running of code in Quarto.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-anhøj2019" class="csl-entry quarto-appendix-citeas">
Anhøj, Jacob. 2019. <span>“A Run Chart Is Not a Run Chart Is Not a Run
Chart.”</span> February 26, 2019. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/a-run-chart-is-not-a-run-chart-is-not-a-run-chart.html">https://nhs-r-community.github.io/nhs-r-community//blog/a-run-chart-is-not-a-run-chart-is-not-a-run-chart.html</a>.
</div></div></section></div> ]]></description>
  <category>Run charts</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/a-run-chart-is-not-a-run-chart-is-not-a-run-chart.html</guid>
  <pubDate>Tue, 26 Feb 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>A simple function to create nice correlation plots</title>
  <dc:creator>Gary Hutson</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-create-nice-correlation-plots.html</link>
  <description><![CDATA[ <!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html --><!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
--><!-- <header id="title-block-header" class="quarto-title-block default page-columns"> --><!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> --><section id="the-problem" class="level1"><h1>The problem</h1>
<p>I was working with a dataset where I wanted to assess the correlation of different variables in R. As much as I like R – the outputs from the console window leave something to be desired (in terms of data visualisation). Therefore, I wanted a way to visualise these correlations in a nicer / cleaner / crisper way. The solution to this is to use a correlation plot.</p>
<p>The package I used for creating my correlation plots was the {corrplot} package, this can be installed and loaded into the R workspace by using the syntax below:</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("corrplot")</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/taiyun/corrplot">corrplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>At this point I would encourage you to check out help for the <code>corrplot</code> function, as it allows you to pass a multitude of parameters to the function.</p>
</section><section id="deconstructing-the-function" class="level1"><h1>Deconstructing the function</h1>
<p>As mentioned previously, this plotting function has a multitude of uses, but all the parameters can be off putting to a newbie! This was me 6 years ago vigorously typing <em>‘how to do this with R relating to x’</em> and bombarding <a href="https://stackoverflow.com/">stackoverflow</a> and other useful websites with questions. Shout out to <a href="https://www.r-bloggers.com/">RBloggers</a> as well!</p>
<p>The function I have created uses the functionality of the {corrplot} packages, but it simplifies the inputs. I will include the function in stages to explain each step, however, if you just want to use the function and are not bothered with the underpinnings then skip the following section:</p>
</section><section id="step-1-function-parameters" class="level1"><h1>Step 1 – Function parameters</h1>
<p>Parameters of the function are as below:</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df_numeric_vals</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_min</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_middle</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_max</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>The parameters to pass to the function are:</p>
<p><code>df_numeric_vals</code> this means a data frame of numeric values only, so any categorical (factor) data needs to be stripped out before passing the data frame to the function; <code>method_corrplot</code> this is a numeric range from 1 – 5. So, for a shaded correlation plot you would use 1. Further examples of the various options will be discussed when I describe how the if statement works. <code>colour_min</code> this uses a gradient colour setting for the negative positive correlations. An example of an input here would be “green”. <code>colour_middle</code> this is the middle range colour, normally I set this equal to (=) “white”. <code>colour_max</code> this is the colour of the strong positive correlations For information on the strength of correlations, refer to this simple guide - <a href="https://www.dummies.com/article/academics-the-arts/math/statistics/how-to-interpret-a-correlation-coefficient-r-169792/">what is R value correlation?</a>.</p>
</section><section id="step-2-creating-the-conditional-if-statement-to-select-correlation-plot-type" class="level1"><h1>Step 2 – Creating the conditional (IF statement) to select correlation plot type</h1>
<p>The below conditional statement uses the input of the function e.g.&nbsp;1-5 to select the type of chart to display. This is included in the code block below:</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/taiyun/corrplot">corrplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df_numeric_vals</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_min</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_middle</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_max</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shade"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pie"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ellipse"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"circle"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shade"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>What does this do then? Well firstly nested in the function I make sure that the {corrplot} library is referenced to allow for the correlation plot functionality to be used. The next series of steps repeat this method:</p>
<ul>
<li>Basically, this says that if the <code>method_corrplot</code> parameter of the function equals input 1, 2, 3, and so on – then select the relevant type of correlation plot.</li>
<li>The <code>type_var</code> is a variable that sets the value of the variable equal to the string stated. These strings link directly back to the parameters of the <code>corrplot</code> function, as I know a type of correlation plot is equal to shade or number, and so on.</li>
<li>Finally, the last step is to convert <code>method_corrplot</code> equal to the textual type specified in the preceding bullet.</li>
</ul>
<p>In essence, what has been inputted as numeric value into the parameter that is. 1; set the <code>type_var</code> equal to a text string that matches something that <code>corrplot</code> is expecting and then set the <code>method_corrplot</code> variable equal to that of the type variable. Essentially, turning the integer value passed into the parameter into a string / character output.</p>
</section><section id="step-3-hacking-the-corrplot-function" class="level1"><h1>Step 3 – Hacking the corrplot function</h1>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df_numeric_vals</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_min</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_middle</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_max</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shade"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pie"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ellipse"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"circle"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shade"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/corrplot/man/corrplot.html">corrplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/cor.html">cor</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df_numeric_vals</span>, use <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all.obs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span>,</span>
<span>    order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AOE"</span>,</span>
<span>    addCoef.col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span>    number.cex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span>    tl.cex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,</span>
<span>    tl.col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span>    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/grDevices/colorRamp.html">colorRampPalette</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_min</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_middle</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    cl.cex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>Let’s explain this function.</p>
<p>So, the <code>corrplot</code> function is the main driver for this and the second nested <code>cor</code> is just as important, as this is the command to create a correlation matrix. The settings are to use the <code>df_numeric_vals</code> data frame as the data to use with the function, the <code>use = 'all.obs'</code> just tells the function to use all observations in the data frame and the <code>method = method_corrplot</code> uses the if statement I created in step 2 to select the relevant chart from the input. The order uses the <strong>angular ordering</strong> method and the <code>addCoef.col = 'black'</code> sets the coefficient values to always show black, as well as the colour of the labels. The background colour of the correlation plot uses the <code>colorRampPalette</code> function to create a gradient scale for the function and the parameters of each of the colour settings like to those inputs I explained in step 1.</p>
<p>The full function is detailed here:</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df_numeric_vals</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_min</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_middle</span>,</span>
<span>                                     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_max</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/taiyun/corrplot">corrplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shade"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pie"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ellipse"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"circle"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shade"</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">type_var</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/corrplot/man/corrplot.html">corrplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/cor.html">cor</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df_numeric_vals</span>, use <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all.obs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">method_corrplot</span>,</span>
<span>    order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AOE"</span>,</span>
<span>    addCoef.col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span>    number.cex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span>    tl.cex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,</span>
<span>    tl.col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span>    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/grDevices/colorRamp.html">colorRampPalette</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_min</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_middle</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colour_max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    cl.cex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>If you want to use the function, just copy and paste this code into a R script file and this will create the function for you. Please remember to install the {corrplot} package by using <code>install.packages(corrplot)</code>.</p>
</section><section id="utilising-the-function" class="level1"><h1>Utilising the function</h1>
<p>The example dataset I will use here is the <code>mpg</code> sample file provided by {ggplot2}. Load the R script provided towards the end of the last section first, as this will create the function in R’s environment. Next, add this code to the end to look at the various different iterations and charts that can be created from the data:</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org">ggplot2</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##------------------CREATE DATASET---------------------------------------</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mpg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#This relates to the numeric variables in the data frame to use with my function</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##------------------USE FUNCTION-----------------------------------------</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>The outputs of the charts are reliant on the correlation plot type select 1-5, and the colour ranges selected. You can choose any colour and I would recommend using the command <code><a href="https://rdrr.io/r/grDevices/colors.html">colours()</a></code> in R console or script to pull up the list of colours native to R.</p>
<p>How about these visualisations:</p>
<div class="cell">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org">ggplot2</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##------------------CREATE DATASET---------------------------------------</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mpg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#This relates to the numeric variables in the data frame to use with my function</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##------------------USE FUNCTION-----------------------------------------</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-create-nice-correlation-plots_files/figure-html/plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-create-nice-correlation-plots_files/figure-html/plot-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-create-nice-correlation-plots_files/figure-html/plot-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-create-nice-correlation-plots_files/figure-html/plot-4.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_gh_style_corrplot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">numeric_df</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitesmoke"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-create-nice-correlation-plots_files/figure-html/plot-5.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Each plot can be tailored to suite your needs. I tend to like blue shades, but go all out and choose whatever colours you like. The R source code is accessible on <a href="https://github.com/StatsGary/CorrelationPlot">GitHub</a>.</p>
<p>I do hope you will use this function to maximise your correlation plots – its all about relationships!</p>
<p>This blog was written by Gary Hutson, Principal Analyst, Activity &amp; Access Team, Information &amp; Insight at Nottingham University Hospitals NHS Trust, and was originally posted on <a href="https://hutsons-hacks.info/a-simple-function-to-create-nice-correlation-plots">Hutson’s Hacks</a>.</p>
<p>This blog has been edited for <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#referencing-r-packages-and-functions-in-text">NHS-R Style</a> and to ensure running of code in Quarto.</p>


</section><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hutson2019" class="csl-entry quarto-appendix-citeas">
Hutson, Gary. 2019. <span>“A Simple Function to Create Nice Correlation
Plots.”</span> January 31, 2019. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/a-simple-function-to-create-nice-correlation-plots.html">https://nhs-r-community.github.io/nhs-r-community//blog/a-simple-function-to-create-nice-correlation-plots.html</a>.
</div></div></section></div> ]]></description>
  <category>Functions</category>
  <category>Statistics</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-create-nice-correlation-plots.html</guid>
  <pubDate>Thu, 31 Jan 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>From script-based development to function-based development and onwards to Package Based development: part 2</title>
  <dc:creator>Andrew Hill</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development-part-2.html</link>
  <description><![CDATA[ <!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html --><!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
--><!-- <header id="title-block-header" class="quarto-title-block default page-columns"> --><!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> --><p>At the NHS R Conference, I suggested to people that they should embrace the idea of package-based development rather than script-based work.</p>
<p>In the first part of this tutorial, in the fictional NHS-R Community greeting room, our humble analyst was tasked with greeting people. Rather than writing a script and needing to repeat themselves all the time with different variations of greetings and senders, they wrote a rather nifty little function to do this:</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greet_person</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the NHS-R Community!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/character.html">is.character</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/stop.html">stop</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greeting must be a string"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/character.html">is.character</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/stop.html">stop</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sender must be a string"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/warning.html">warning</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greet_person isn't very good at handling more than one sender. It is better to use just one sender at a time."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" from "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>As we know, R is awesome and many people took up R on the background of some excellent publicity and training work by the NHS-R community. Our poor greeting team got overwhelmed by work: it is decided that the team of greeters needs to expand. There will now be a team of three greeters. Every other bit of work output from our NHS-R community team will involve greeting someone before we present our other awesome analysis to them.</p>
<p>This is going to be a nightmare! How can we scale our work to cope with multiple users, and multiple other pieces of work using our greeting function.</p>
<p>If we rely upon the scripts, we have to trust that others will use the scripts appropriately and not edit or alter them (accidentally or on purpose). Furthermore, if someone wants to greet someone at the beginning of their piece of analysis, they’ll either have to copy the code and paste it somewhere, or link to our script containing the function – which in turn means they need to keep a common pathname for everything and hope no-one breaks the function. Nightmare!</p>
<p>Fortunately, someone attended the last NHS-R conference and remembered that package-based development is a really handy way of managing to scale your R code in a sustainable way. So after a team meeting with copious caffeine, it is decided that greet_person needs to go into a new package, cunningly named {NHSRGreetings}. And here’s how we’re going to do it.</p>
<p>In R Studio, go to File and then to New Project. Click on New Directory, and then click on R Package. I am using RStudio 1.2 Preview for this tutorial which is downloadable from the R website. I would recommend doing this as some of the package management has been greatly simplified and some frustrating steps removed.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-package-preview.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of RStudio’s package preview wizard</figcaption></figure>
</div>
<p>Click on ‘Open in new session’ (so we can see the original code), and set the Package name as {NHSRGreetings}. We could just pull our old source files into the package – but for this tutorial I’m going to do things the longer way so you also know how to create new functions within an existing package.</p>
<p>Set the project directory to somewhere memorable.</p>
<p>For now don’t worry about the git or {packrat} options – those are tutorials within themselves!</p>
<p>You are greeted with a package more or less configured up for you. A single source file, <code>hello.R</code> is set up for you within an <code>R</code> directory within the package. It’s not as cool as our function of course, but it’s not bad! It comes with some very helpful commented text:</p>
<pre><code># Hello, world!
#
# This is an example function named 'hello'
# which prints 'Hello, world!'.
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Cmd + Shift + B'
#   Check Package:             'Cmd + Shift + E'
#   Test Package:              'Cmd + Shift + T'</code></pre>
<p>So let’s check if the comments are right – hit Cmd + Shift + B on a Mac (on Windows and Linux you should see slightly different shortcuts). You can also access these options from the Build menu in the top right pane.</p>
<p>You will see the package build. R will then be restarted, and you’ll see it immediately performs the command <code><a href="https://rdrr.io/r/base/library.html">library(NHSRGreetings)</a></code> performed, which loads our newly built package.</p>
<p>If you type <code>hello()</code> at the command line, it will do as you may expect it to do!</p>
<p>So – time to customise our blank canvas and introduce our much more refined greeter.</p>
<p>In the root of our project you will see a file called <code>DESCRIPTION.</code> This contains all the information we need to customise our R project. Let’s customise the Title, Author, Maintainer and Descriptions for the package.</p>
<p>We can now create a new R file, and save it in the R subdirectory as <code>greet_person.R</code>. Copy over our <code>greet_person</code> function. We should be able to run install and our new function will be built in as part of the package.</p>
<p>We can now get individual team members to open the package, run the build once on their machine, and the package will be installed onto their machine. When they want to use any of the functions, they simply use the command <code><a href="https://rdrr.io/r/base/library.html">library(NHSRGreetings)</a></code> and the package will be ready to go with all the functions available to them. When you change the package, the authors will have to rebuild the package just the once to get access to the new features.</p>
<p>When writing packages it is useful to be very wary about namespaces. One of the nice things about R is that there are thousands of packages available. The downside is that it makes it very likely that two individuals can choose the same name for a function. This makes it doubly important to pick appropriate names for things within a package.</p>
<p>For example, what if instead of the NHSRCommunity package someone wrote a {CheeseLoversRCommunity} package with a similarly names greet_person, but it did something totally different?</p>
<p>In a script, you have full control over the order you load your packages, so R will happily let you call functions from packages and trust that you know what order you loaded things in.</p>
<p>If you are a package author however, it’s assumed you may be installed on many machines, each with a potentially infinite set of combinations of different packages with names that may clash (or if they don’t already they might do in the future).</p>
<p>So within the package, any function which doesn’t come from R itself needs to have clearly defined which package it has come from.</p>
<p>Within DESCRIPTION you must define which package you use, and the minimum version. You do this with the Imports keyword. Attached is the Imports section of one of the SSNAP packages:</p>
<pre><code>Imports:
    methods (&gt;= 3.4.0),
    lubridate (&gt;= 1.7.4),
    tibble (&gt;= 1.4.2),
    dplyr (&gt;= 0.7.5),
    tibbletime (&gt;= 0.1.1),
    glue (&gt;= 1.2.0),
    purrr (&gt;= 0.2.5),
    rlang (&gt;= 0.2.0),
    readr (&gt;= 1.1.1),
    stringr (&gt;= 1.3.1),
    ssnapinterface (&gt;= 0.0.1)</code></pre>
<p>Next within your functions, rather than just calling the functions use the package name next to the function. For example instead of calling <code>mutate()</code> from the {dplyr} package, refer to it as <code><a href="https://dplyr.tidyverse.org/reference/mutate.html">dplyr::mutate()</a></code> which tells R you mean the mutate function from the {dplyr} package rather than potentially any other package. There are ways to declare functions you are using a lot within an individual file – but this method makes things pretty foolproof.</p>
<p>Another tip is to avoid the {magrittr} pipe within package functions. Whilst {magrittr} makes analysis scripts nice and clean, firstly you still have the namespace issue to deal with (<code>%&gt;%</code>).</p>
<p>Is actually a function, just one with a funny name – it is really called <code>magrittr::%&gt;%()</code> !) Secondly the way {magrittr} works can make debugging difficult. You don’t tend to see that from a script. But if you’re writing code in a package, which calls a function in another package, which calls code in another package, which uses {magrittr} – you end up with a really horrid nest of debugging errors: it is better to specify each step with a single variable which is reused.</p>
<p>When you’ve got your code in, the next important thing to do is check your package. Build simply makes sure your code works. Check makes sure that you follow a lot of ‘rules’ of package making – including making sure R can safely and clearly know where every R function has come from. Check also demands that all R functions are documented: something which is outside of the scope of this tutorial and is probably the subject for another blog post – a documented function means if you type <code>?greet_person</code> that you should be able to see how to use the function appropriately. It can help you create your own website for your package using the pkgdown package.</p>
<p>If your package both builds and checks completely and without errors or warnings, you might want to think about allowing the wider public to use your project. To do this, you should consider submitting your project to CRAN. This involves a fairly rigorous checking process but means anyone can download and use your package.</p>
<p>If we can get enough people to develop, share their code and upload their packages to CRAN we can work together to improve the use of R across our community.</p>
<p>Feedback and responses to <a href="https://twitter.com/drewhill79"><span class="citation" data-cites="drewhill79">@drewhill79</span></a>.</p>
<p>This blog was written by Dr.&nbsp;Andrew Hill, Clinical Lead for Stroke at St Helens and Knowsley Teaching Hospitals.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hill2019" class="csl-entry quarto-appendix-citeas">
Hill, Andrew. 2019. <span>“From Script-Based Development to
Function-Based Development and Onwards to Package Based Development:
Part 2.”</span> January 7, 2019. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development-part-2.html">https://nhs-r-community.github.io/nhs-r-community//blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development-part-2.html</a>.
</div></div></section></div> ]]></description>
  <category>Packages</category>
  <category>Functions</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development-part-2.html</guid>
  <pubDate>Mon, 07 Jan 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Roadmap to collaborative working using R in the NHS: Part I- Workflows</title>
  <dc:creator>Sebastian Zeki</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/roadmap-to-collaborative-working-using-r-in-the-nhs-part-i-workflows.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<p>We finally have a tool that is data independent. R allows the scripting of a data science methodology that we can share and develop and which does not necessarily depend on carrying patient data with it. This means that the door to working collaboratively on solutions is now wide open. But before this happens in a truly robust way there are several hurdles that need to be overcome. This is the first part of a series of articles in which I hope to outline the roadmap to networking our solutions in R so we can work collaboratively between Trusts to accelerate data science solutions for healthcare data.</p>
<section id="standardising-r-workflows-in-the-nhs" class="level1">
<h1>Standardising R Workflows in the NHS</h1>
<p>In the throws of a new(ish) tool such as R, everybody has a way of working which is slightly different to one another. This is how best practice evolves, but in the end the best practice has to be standardised so that developers can work together. This is an article outlining my best practice for R script organisation and is an invitation for comment to see if there is any interest in developing a NHS standard for working and organising our solutions.</p>
</section>
<section id="principles-of-r-script-development" class="level1">
<h1>Principles of R script development</h1>
<p>As the R development environment is so methods based, it makes sense to have a standardised way to develop scripts so that different developers understand the basic workflow of data and can focus on the specific methodology for the specific problem rather than disentangle endless subsets of data and how each is cleaned and merged etc. I use various principles when developing a script and useful approach to R script development.</p>
</section>
<section id="a-an-r-script-should-focus-on-a-specific-problem." class="level1">
<h1>a) An R script should focus on a specific problem.</h1>
<p>A solution is only as good as the question. Questions come in a variety of scopes and shapes and there is an art to asking a solvable question which is beyond the limits of this article.</p>
<p>Having defined a question, a script should set out to be the solution to that question and not be a generic answer. Generic answers belong as functions or collections of functions called packages. An R script should tackle specific problems such as ‘How many endoscopies did we perform last year’ and you find that this kind of question is asked a lot (’How many x did we perform last y years) then the script might become a function and a collection of functions might become a package.</p>
</section>
<section id="b-the-r-script-should-access-the-minimal-dataset-needed-and-avoid-intermediate-datasets." class="level1">
<h1>b) The R script should access the minimal dataset needed and avoid intermediate datasets.</h1>
<p>There is a real danger with data analysis that the data set used is huge but you only need a part of it. With R you can have the ability to specify the data used from within the script so that you should use the minimum dataset that is pertinent to the question. In fact the whole script should be specific to the question being asked. The data access should, as far as possible also be from the data repository rather than an intermediate dataset. For example you can specify a SQL query from within R to an electronic patient record (EPR) rather than get a data dump from the EPR into, for example, an Excel spreadsheet, and then import the Excel spreadsheet. It’s just more secure and avoids versioning issues with the data dump.</p>
</section>
<section id="c-an-r-script-should-be-organised-according-to-a-standardised-template" class="level1">
<h1>c) An R script should be organised according to a standardised template</h1>
<p>All analysis I perform adheres to a specific workflow for each script so that the script is separated into specific subsections that perform types of actions on the data. This also incorporates the important aspect of commenting on each part of the workflow. This is important so that developers can understand the code further down the line. The workflow I use is as follows:</p>
<pre><code>## Title ##

## Aim ##

## Libraries ##

## Data access ##

## Data cleaning &amp; Data merging ##

## Data mutating (creating columns from pre-existing data) ##

## Data forking (filtering and subsetting) ##

## Documenting the sets (usually creation of consort type diagrams with diagrammeR##

## Documenting the code with CodeDepends ##

## Data analysis ##
</code></pre>
</section>
<section id="data-access" class="level1">
<h1>Data access</h1>
<p>The title of the script including the author and date is written at the top. The aim of the script is then stated along with any explanation (why am I doing this and so on). The workflow makes sure that all libraries are loaded at the beginning. Data access is also maintained at the top so anyone can immediately see the starting point for the analysis. Data access should specify the minimal dataset needed to answer the specific question of the script as explained above. For example there is no point using a dataset of all endoscopies between 2001 and 2011 when your script is only looking at colonoscopy specifically. I also try to avoid functions such as <code>file.choose()</code> as I like to keep the path to the source file documented, whether it is a local or remote repository.</p>
</section>
<section id="data-cleaning-data-merging" class="level1">
<h1>Data cleaning &amp; Data merging</h1>
<p>The difficult task of data cleaning and merging with other datasets is then performed. One of my data principles is that when working with datasets you should start with the smallest dataset that answers all of your questions and then filter down for each question rather than build up a dataset throughout a script, so I like to merge external datasets early when possible. This could be called early binding technically but given the data access part of the code specifies a data set that is question-driven, I am early binding to a late-bound set (if that makes sense).</p>
</section>
<section id="data-mutating" class="level1 page-columns page-full">
<h1>Data mutating</h1>
<p>Once cleaning and merging is performed, subsets of data for specific subsections of the question can be done and then the statistical analysis performed on each subset as needed.</p>
<p>I find it very useful to keep track of the subsets of data being used. This allows for sanity checking but also enables a visual overview of any data that may have been ‘lost’ along the way. I routinely use <a href="https://rich-iannone.github.io/DiagrammeR/">{diagrammeR}</a> for this purpose which gives me consort type diagrams of my dataset flows.</p>
<p>The other aspect is to examine the code documentation and for this I use {codeDepends} which allows me to create a flow diagram of my code (rather than the data sets). Using {diagrammeR} and {codeDepends} allows me to get an overview of my script rather than trying to debug line by line.</p>

<div class="no-row-height column-margin column-container"><div class="margin-aside">
<p>{codeDepends} is no longer on CRAN but this may be the original repository <a href="https://github.com/duncantl/CodeDepends">https://github.com/duncantl/CodeDepends</a></p>
</div></div><ol start="4" type="a">
<li>R scripts should exist with a standardised folder structure for each script</li>
</ol>
<p>R scripts often exist within a project. You may be outputting image files you want access to later, as well as needing other files. R studio maintains R scripts as a project and creates a file system around each script. There are several packages that will also create a file dependency system for a script so that at the very least the organisation around the R script is easy to navigate. There are several <a href="https://www.r-bloggers.com/2017/01/implementation-of-a-basic-reproducible-data-analysis-workflow/">ways to do this</a> and some <a href="https://pirategrunt.com/represtools/">packages</a> exist that will set this up for you.</p>
</section>
<section id="e-r-files-should-have-a-standard-naming-convention." class="level1">
<h1>e) R files should have a standard naming convention.</h1>
<p>This is the most frustrating problem when developing R scripts. I have a few scripts that extract text from medical reports. I also have a few scripts that do time series analysis on patients coming to have endoscopies. And again a few that draw Circos plots of patient flows through the department. In the end that is a lot of scripts. There is a danger of creating a load of folders with names like ‘endoscopyScripts’ and ‘timeSeries’ that don’t categorise my scripts according to any particular system. The inevitable result is lost scripts and repeated development. Categorization and labelling systems are so important so you can prevent re-inventing the same script. As the entire thrust of what I do with R is in the end to develop open source packages, I choose to name scripts and their folders according to the questions I am asking. The naming convention I use is as follows</p>
<p><strong>Top level folder:</strong> Name according to question domains (defined by generic dataset)</p>
<p><strong>Script name:</strong> Defined by question in the script dataset_FinalAnalysis</p>
<p>The R developer will soon come to realise the question domains that are most frequently asked and I would suggest that this is used as the naming convention for top-level folders. I would avoid categorising files according to the method of analysis. As an example, I develop a lot of scripts for the extraction of data from endoscopies. In general I either do time series analysis on them or I do quality analysis. The questions I ask of the data are things like: ‘How many colonoscopies did we do last year’ or ‘How are all the endoscopists performing when measured by their diagnostic detection rates for colonoscopy’. I could name the files ‘endoscopyTimeSeries’ or ‘endoscopyQualityAssess’ but this mechanistic labelling doesn’t tell me much. By using question based labelling I can start to see patterns when looking over my files. According to my naming convention I should create a folder called ‘Endoscopy’ and then the script names should be ‘Colonoscopies_DxRate and ‘Colonoscopies_ByYear’. The next time I want to analyse a diagnostic rate, maybe for a different data set like gastroscopies, I can look through my scripts and see I have done a similar thing already and re-use it.</p>
<p>In the end, the role of categorizing scripts in this way allows me to see a common pattern of questions. The re-usability of already answered questions is really the whole point of scripting solutions. Furthermore it allows the deeply satisfying creation of generic solutions which can be compiled into functions and then into packages. This has already been expanded upon here.</p>
</section>
<section id="f-always-use-a-versioning-system-for-your-r-scripts" class="level1">
<h1>f) Always use a versioning system for your R scripts</h1>
<p>R scripts need to be versioned as scripts may change over time. A versioning system is essential to any serious attempt at providing solutions. There are two aspects to versioning. Firstly the scripts may change and secondly the packages may change. Dependency versioning can be dealt with by using <a href="https://cran.r-project.org/web/packages/checkpoint/vignettes/checkpoint.html">checkpoints</a> within the scripts. This essentially freezes the dependency version so that the package that worked with the current version of the script can be used. I have found this very useful for the avoidance of script errors that are out of my control.</p>
<p>The other issue is that of versioning between developers. I routinely use <a href="https://github.com/sebastiz">Github</a> as my versioning system. This is not always available from within Trusts but there are other versioning systems that can be used in house only. Whichever is used, versioning to keep track of the latest workable scripts is essentially to prevent chaos and insanity from descending into the development environment. A further plea for open source versioning is the greater aspiration of opening up R scripts in healthcare to the wider public so that everyone can have a go at developing solutions and perhaps we can start to network solutions between trusts.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion:</h1>
<p>There is a greater aim here, which I hope to expand on in a later article, which is the development of a solutions network. In all healthcare trusts, even outside of the UK, we have similar questions, albeit with different datasets. The building blocks I have outlined above are really a way of standardising in-house development using R so that we can start to share solutions between trusts and understand each other’s solutions. A major step forward in sharing solutions would be to develop a way of sharing (and by necessity categorising) the questions we have in each of our departments. Such a network of solution sharing in the NHS (and beyond) would require a CRAN (or rOpenSci) type pathway of open source building, and validation as well as standardised documentation but once this is done it would represent a step change in analytics in the NHS. The steps I have shared above certainly help me in developing solutions and certainly help in the re-use of what I have already built rather than re-creating solutions from scratch.</p>
<p>This blog was written by Sebastian Zeki, Consultant Gastroenterologist at Guy’s and St Thomas’ NHS Foundation Trust.</p>
<p>This blog has been formatted to remove <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#avoid-latin-abbreviation">Latin Abbreviations</a>.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-zeki2019" class="csl-entry quarto-appendix-citeas">
Zeki, Sebastian. 2019. <span>“Roadmap to Collaborative Working Using R
in the NHS: Part I- Workflows.”</span> January 7, 2019. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/roadmap-to-collaborative-working-using-r-in-the-nhs-part-i-workflows.html">https://nhs-r-community.github.io/nhs-r-community//blog/roadmap-to-collaborative-working-using-r-in-the-nhs-part-i-workflows.html</a>.
</div></div></section></div> ]]></description>
  <category>Workflow</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/roadmap-to-collaborative-working-using-r-in-the-nhs-part-i-workflows.html</guid>
  <pubDate>Mon, 07 Jan 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>But this worked the last time I ran it!</title>
  <dc:creator>Zoë Turner</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/but-this-worked-the-last-time-i-ran-it.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<p>A common scenario: you are new to a programming language, chuffed that you’ve done a few bits and progressing well. A colleague hands you their code to run a regular report. That’s fine, you’ve got a smattering of understanding, and this is existing code, what could go wrong? But the code doesn’t run. You check through it but nothing looks obviously out of place and then your colleague adds to your utter confusion by saying it works on their machine.</p>
<p>Another scenario: you are new to a programming language and have written some code. It’s been working surprisingly well and you feel very pleased with your progress but then, suddenly, it fails. You look on at the computer, stunned. It worked the last time you ran it! You’ve made no changes and yet lots of red errors now appear and these errors are, quite frankly, utterly baffling and even googling them turns up all manner of strange discussions which might as well be in Old English (sort of familiar but you have no idea what it’s saying).</p>
<p>The solution: well there won’t necessarily be just one solution but here are a few things I’ve picked up in my early days using RStudio. I’m still in those early days and I probably haven’t encountered all that could possibly go wrong so please add to these and definitely comment if I’ve made any glaring errors!</p>
<blockquote class="blockquote">
<p>My colleague can run this script on this very same computer but I can’t! What’s that all about?</p>
</blockquote>
<p>RStudio allows you to install and run your own packages (if your network allows) and that’s really useful when you just want to try something out, follow up on a recommendation or install something a training course has required. Given our strict network and IT installations this is quite a liberating experience!</p>
<p>But what isn’t apparent when you are merrily installing packages is that these are installed to your own folder so on a shared network this may not be accessible by a colleague. Step one in the solving the problem is to check the package is installed on your machine and your profile.</p>
<p>You may now be familiar with:</p>
<p><code>install.packages("dplyr")</code> to install and then <code>library(dplyr)</code></p>
<p>but consider using</p>
<p><code>if (!require(dplyr)) install.packages("dplyr")</code></p>
<p>so RStudio will install this package if it is missing. Very useful when sharing R scripts as they can just be run with no typing by the recipient.</p>
<blockquote class="blockquote">
<p>I ran this code the other day and it was fine and now I get errors – but I haven’t done anything!</p>
</blockquote>
<p>This happened recently to a colleague and prompted me to write this blog because I thought, this is probably the kind of thing that happens all of the time and if no one tells you this how could you know? Well there is Google but it’s too much to type <em>I ran this code the other day and it now gives me an error…</em>.</p>
<p>My colleague’s code had been working, she hadn’t made any changes but one day it just failed. It wasn’t as if she ran it, ran it again seconds later and it failed, this was a run-it-one-day, it works and run-it-the-next-day, it fails. She asked if I could help and all I could think of was to run it myself. Not exactly expert support I thought. A bit like calling IT with a computer problem and being asked if you’ve rebooted your machine but a bit more advanced than “have you switched it on?”. Something strange happened when I ran it; it worked.</p>
<p>Just as a plug for another blogger she was recreating the plot from this blog:</p>
<p><a href="https://www.johnmackintosh.com/blog/2017-12-21-flow/">https://www.johnmackintosh.com/blog/2017-12-21-flow/</a></p>
<p><a href="https://github.com/johnmackintosh/RowOfDots">https://github.com/johnmackintosh/RowOfDots</a></p>
<p>This was puzzling but I had a faint recollection from other R people’s stories that you should keep your packages are up to date. One course had even said about updating these regularly and had, thankfully, shown us what to do.</p>
<p>Packages are regularly being updated, a few tweaks here and there I guess. Plus many are built on other packages (like {dplyr} and {ggplot2}) so if they are updated then it’s like a domino effect. RStudio is nicely set up so you don’t have to go to the internet to find out individually what you need to update, you just need to go to ‘Packages’ in the bottom right hand panel of RStudio, select ‘Update’ which has a green circle with an arrow and it brings up a list of what needs updating.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-packages-rstudio.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of the packages tab from RStudio along with Files, Plots, Help and Viewer</figcaption>
</figure>
</div>
<p>If you’ve not done this for a while you may have quite a few updates!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-package-update.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of the packages needed to be updated from selecting the RStudio update</figcaption>
</figure>
</div>
<p>Eagle eyed readers may recognise this Public Health package {fingertipscharts}. If not, check it out!</p>

<div class="no-row-height column-margin column-container"><div class="margin-aside">
<p>{fingertipscharts} is not on CRAN and can be found at the GitHub repository <a href="https://github.com/ukhsa-collaboration/fingertipscharts">https://github.com/ukhsa-collaboration/fingertipscharts</a></p>
</div></div><p>If you are like me you may have installed some packages that you now rarely use and have no idea what they are. They may ask the following in the console (bottom left of the screen):</p>
<p>Do you want to install from sources the packages which need compilation?</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-compilation-message.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of the RStudio Console message when packages require compilation</figcaption>
</figure>
</div>
<p>This prompt is so that the package can be updated by building it on your computer. I’ve got a couple of packages that I have tried to do this but each time I go to check for updates they are still requesting an update so I just say no so I can fly through the other updates.</p>
<p>Finally, a bit of a vague warning as I don’t understand this part but I once updated packages after I’d run a couple of scripts. This meant that a couple of the packages that needed updating were already loaded and so things got a bit muddled. I’m not entirely sure if this is a problem but I now shut all projects and code and run a new R Studio screen to do updates.</p>
<p>This blog was written by Zoe Turner, Senior Information Analyst at Nottinghamshire Healthcare NHS Foundation Trust.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-turner2018" class="csl-entry quarto-appendix-citeas">
Turner, Zoë. 2018. <span>“But This Worked the Last Time I Ran
It!”</span> December 20, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/but-this-worked-the-last-time-i-ran-it.html">https://nhs-r-community.github.io/nhs-r-community//blog/but-this-worked-the-last-time-i-ran-it.html</a>.
</div></div></section></div> ]]></description>
  <category>Packages</category>
  <category>Debugging</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/but-this-worked-the-last-time-i-ran-it.html</guid>
  <pubDate>Thu, 20 Dec 2018 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Local Public Health joins the paRty</title>
  <dc:creator>Andy Evans</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/local-public-health-joins-the-party.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<p>Having recently attended an R meetup in Birmingham, hearing of various user groups and hackathons that take place around certain technologies, I was getting a feeling that there was an increasing desire in the public health community to learn more about R and modern data science tools and techniques. I wondered whether there would be interest in a data science and R user group for the West Midlands public health intelligence community. I thought I’d raise the idea at the West Midlands Public Health Intelligence Group (WMPHIG) when I attended the quarterly meeting, but another attendee beat me to it and doing so confirmed there was some interest. I volunteered to arrange the first user group and Public Health England (PHE) kindly offered assistance.</p>
<p>Between us we setup a date and venue for the first meeting at the PHE offices in Birmingham and I was pleased to hear from Nicola at PHE that “…Tickets are selling like hotcakes! “</p>
<p>Not knowing exactly how the group would best work, we suggested a loose structure for the meeting with the following discussion points:</p>
<ul>
<li>How this group should work<br>
</li>
<li>Assess current levels of knowledge/experience<br>
</li>
<li>R training requirements<br>
</li>
<li>R learning methods<br>
</li>
<li>Public health R use examples (including Fingertips R) &amp; wider use examples<br>
</li>
<li>What could be done with R / What else do people want to do with R<br>
</li>
<li>Challenges and issues people have experienced/are experiencing<br>
</li>
<li>Possible joint projects that might benefit all members</li>
</ul>
<p>We ended up staying reasonably on topic, but there was plenty of useful and engaging discussion around the topics of data science and R. The was a nice mix of novice and more advanced R users (though no one admitted to being an expert 😉 ) in the group. Many of those who were more advanced had fairly recently been novice users. Whilst the more advanced users were able to share their experiences of their learning journeys, others were able to contribute on how we might develop use of data science and R in Public Health Intelligence. I was also impressed with some of the examples of R use that were shared with the group by analysts who have only been using it for a relatively short time. A key point shared was though R may seem a bit daunting at first, its worth jumping in and getting your analytical hands dirty!</p>
<p>A number of attendees had also managed to attend the NHS-R Community Conference and shared positive experiences of the day and the knowledge they’d picked up.</p>
<p>Everyone appeared to agree that R and other modern data science tools/methods can offer a lot to public health intelligence. There also appeared to be a desire to work together and help each other out on this learning journey. With that spirit in mind, we have agreed to share code and other useful information on K-Hub (<a href="https://khub.net/">https://khub.net/</a>) and another meeting is going to be arranged for next quarter.</p>
<p>Thanks to all that attended and contributed and to PHE for helping with the organisation.</p>
<p>This blog was written by Andy Evans, Senior Officer at Birmingham City Council.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-evans2018" class="csl-entry quarto-appendix-citeas">
Evans, Andy. 2018. <span>“Local Public Health Joins the paRty.”</span>
November 22, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/local-public-health-joins-the-party.html">https://nhs-r-community.github.io/nhs-r-community//blog/local-public-health-joins-the-party.html</a>.
</div></div></section></div> ]]></description>
  <category>Reflections</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/local-public-health-joins-the-party.html</guid>
  <pubDate>Thu, 22 Nov 2018 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Thoughts on the NHS-R conference</title>
  <dc:creator>John MacKintosh</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/thoughts-on-the-nhs-r-conference.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<p>It’s been a few weeks since the first NHS-R conference was held in Birmingham.</p>
<p>I co-presented a couple of workshops with Neil Pettinger on visualising patient flow, covering the following</p>
<ul>
<li>importing from Excel (and connecting to SQL Server)</li>
<li>dplyr</li>
<li>ggplot2 &amp; plotly</li>
<li>gifski for basic animation</li>
<li>automating reports with officer</li>
<li>gganimate demo</li>
<li>tidy evaluation via a custom plot function</li>
<li>alternative flow plots with ggalluvial</li>
<li>a simple Shiny app</li>
<li>Code, data and templates for the workshop are available here.</li>
</ul>
<p>I hope those who attended found it useful.</p>
<p>The event itself was a huge success. I’d have loved to have been able to see all the sessions that were taking place.</p>
<p>There were a series of lightning talks – there are Trusts using R for machine learning and classification, and others using it for predicting admissions <a href="https://chrisbeeley.net/">Chris Beeley</a> presented on the use of Shiny, while Jacob Anhøj led a session on SPC using his qicharts2 package. It was a huge honour to meet Jacob, I’ve used his package almost since inception, and I know how much effort has gone into the rigorous analysis the package provides.</p>
<p>I was also very pleased to meet Chris (Beeley), <a href="http://hutsons-hacks.info/">Gary Hutson</a>, Ed Watkinson, Zoë (who masquerades on Twitter as Applied Information Nottingham) and Garry Fothergill face to face, and to see Val Perigo, Paul Stroner and Professor Mohammed Mohammed again. I also want to say thank you to Shahima who helped me revise my incredibly shoddy attempt at a bio, and for organising the event.</p>
<p>From my point of view, the workshop was enjoyable to deliver. There were a couple of technical glitches ( I couldn’t share my laptop screen, so had to project it and then fly blind , which led to me spending more time facing the screen than the audience, which was not ideal), but even with that, we got through the material and it all worked within the alloted time.</p>
<p>It was great to be in a room full of analysts passionate about R and the NHS. Neil mentioned ‘community’ in his blog post, and it is true. There was a greate vibe, as I’d expect to be honest. I’ve never been one for being part of a gang but anyone into R in the NHS is instinctively all right by me 🙂 I’m pretty sure there was enough brain power in that room to tackle any analytical challenge that could get thrown at the NHS. The challenge is in harnessing that power , promoting R as the incredible tool that it is, and enabling us to work collaboratively rather than in silos. If only there was an R package for that..</p>
<p>This blog was written by John MacKintosh, Data Manager at NHS Highland and was originally posted on John Mackintosh’s own blog <a href="https://www.johnmackintosh.com/blog/2018-10-31-thoughts-on-the-nhs-r-conference/">Data by John</a></p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-mackintosh2018" class="csl-entry quarto-appendix-citeas">
MacKintosh, John. 2018. <span>“Thoughts on the NHS-R Conference.”</span>
November 15, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/thoughts-on-the-nhs-r-conference.html">https://nhs-r-community.github.io/nhs-r-community//blog/thoughts-on-the-nhs-r-conference.html</a>.
</div></div></section></div> ]]></description>
  <category>Conference</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/thoughts-on-the-nhs-r-conference.html</guid>
  <pubDate>Thu, 15 Nov 2018 00:00:00 GMT</pubDate>
</item>
<item>
  <title>NHS-R Conference: was it worth it?</title>
  <dc:creator>Zoë Turner</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/nhs-r-conference-was-it-worth-it.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<p>Soon after I started in this role I was offered several free places to a conference on Big Data. It was aimed at Healthcare and with Big Data in the title it sounded very exciting. Sadly, like many things around ‘Big Data’ it was baffling. There were a few good, high-level, presentations but it turned out the conference was funded by private companies and they had bought the opportunity to showcase their wares. I didn’t learn anything practical and I would be hard pressed to recall anything from the event now. All in all, it was a disappointment.</p>
<p>Time passed and I tentatively started messing around with R. Not being someone who can learn well from books and videos, I learn better from someone telling me what they’ve written, I went to a couple of free R training events, one of which was run by NHS-R. At that training there was talk of an NHS-R conference and I couldn’t help but get that familiar tingle of excitement. Yet, in the back of my head now was the nagging feeling that it might be like that Big Data conference. After all, these things are not easy to set up, I was still overwhelmed by what R could do and still just learning and, well, how good could it really be?</p>
<p>Optimism won out, along with the fact that the conference was free and a few colleagues were going so I could get a lift. I had nothing to lose. I didn’t even have to build a case to go for my managers let alone myself. At worst I could expect a day out and a free coffee, maybe a biscuit. It was settled. I would even take my own lunch.</p>
<p>It’s been a fair number of weeks since the event, which is a pretty good time to evaluate something like this. I always find that there is a buzz after any conference or meeting. The buzz of course can be as much negative as positive energy so it’s best to wait a few days before rviewing, I think. Plus, I’m not that used to writing down my thoughts. After all of my doubts then, did it live up to my vague and overly excitable expectations? Oh yes, it did. In buckets.</p>
<p>I’ve worked with some intelligent and creative people in the NHS and it turns out these weren’t isolated pockets of great people doing great work. The NHS, and other organisations close to it, are chock full of these people. We had speakers from Public Health, universities, foundations, private consultancies, Acute and Mental Health Trusts. In fact, I know it’s called NHS-R but it’s not an exclusive club and nor should it be.</p>
<p>We were shown finished pieces of work in R as well as the code itself which I really enjoyed. I’m an analyst and I like to see the logic and the code as that’s where I work – in the detail. Best of all though was the networking. I met a number of people I knew either from courses or from their blogs/R packages. Unlike the ‘Big Data’ conference where I had to track someone down on LinkedIn to ask about one of the presentations, and sadly heard nothing, I have contacted some of the speakers through Twitter and email and had conversations. There is a sense that everyone is in this together and that competitive edge you sometimes get in IT is notably missing.</p>
<p>The other great thing about this conference was that it was free and that should not be underestimated. Being free, it attracted those non-management, just starting out in R, not even statisticians and only did maths to GSCE level people like me. The NHS, like many other public-sector organisations, are feeling the pinch and more than ever we need support and training for the hidden side of the NHS – its data people. And it’s those people I hope you will see at the next NHS-R conference showing their achievements and sharing their enthusiasm, because, whilst this was a training/conference event, really it was the coming together of a community.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-turner2018" class="csl-entry quarto-appendix-citeas">
Turner, Zoë. 2018. <span>“NHS-R Conference: Was It Worth It?”</span>
October 26, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/nhs-r-conference-was-it-worth-it.html">https://nhs-r-community.github.io/nhs-r-community//blog/nhs-r-conference-was-it-worth-it.html</a>.
</div></div></section></div> ]]></description>
  <category>Conference</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/nhs-r-conference-was-it-worth-it.html</guid>
  <pubDate>Thu, 25 Oct 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Text Mining – Term Frequency analysis and Word Cloud creation in R</title>
  <dc:creator>Gary Hutson</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/text-mining-term-frequency-analysis-and-word-cloud-creation.html</link>
  <description><![CDATA[ <!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html --><!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
--><!-- <header id="title-block-header" class="quarto-title-block default page-columns"> --><!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> --><p>Analysing the pre-conference workshop sentiments</p>
<p>Loading in the required packages:</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">install_or_load_pack</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create.pkg</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/match.html">%in%</a></span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/installed.packages.html">installed.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Package"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create.pkg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/install.packages.html">install.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create.pkg</span>, dependencies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">sapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">require</span>, character.only <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyverse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.table"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wordcloud"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wordcloud2"</span>,</span>
<span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scales"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidytext"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"devtools"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"twitteR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caret"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magrittr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RColorBrewer"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidytext"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggdendro"</span>,</span>
<span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topicmodels"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SnowballC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gtools"</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_or_load_pack</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>This function was previously covered in blog post: <a href="https://nhsrcommunity.com/blog/a-simple-function-to-install-and-load-packages-in-r/">https://nhsrcommunity.com/blog/a-simple-function-to-install-and-load-packages-in-r/</a>.</p>
<p>Here I specify that I want to load the main packages for dealing with sentiment and discourse analysis in R. Libraries such as {tm}, {wordcloud} and {wordcloud2} are loaded for working with this type of data.</p>
<section id="choosing-the-file-to-import" class="level2"><h2 class="anchored" data-anchor-id="choosing-the-file-to-import">Choosing the file to import</h2>
<p>The file we have to import is a prepared csv file and instead of hard coding the path to load the file from I simply use:</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">path</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/choose.files.html">choose.files</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-choose.files.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of Select files window that pops up to allow files to be chosen</figcaption></figure>
</div>
<p>This is a special function which allows you to open a dialog UI from R:</p>
<p>From this dialog I select the csv file I want to be imported. Once I have selected the csv and hit open, the path variable will be filled with the location of the file to work with.</p>
</section><section id="creating-the-r-data-frame" class="level2"><h2 class="anchored" data-anchor-id="creating-the-r-data-frame">Creating the R Data Frame</h2>
<p>To create the data frame I can now pass the variable <strong>path</strong> to the <code>read_csv()</code> command:</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">workshop_sentiment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">path</span>, col_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">T</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>This will read the textual data from the workshops in to a data frame with 2 columns. The first relates to what the attendees enjoyed about the workshop and the second relates to improvements that can be made:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-text-conf.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of the highlights and improvements text from a pre-conference survey</figcaption></figure>
</div>
</section><section id="separate-the-master-data-frame" class="level1"><h1>Separate the master data frame</h1>
<p>The master data frame now needs to be separated into two separate data frames, as text analysis requires one column with the number of rows for each sentence, as demonstrated. Here I use {magrittr} to divide this into two new data frames:</p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ws_highlights</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">workshop_sentiment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy for improvements</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ws_improvements</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">workshop_sentiment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
</div>
<p>The <code>ws_highlights</code> data frame uses the first column and the <code>ws_improvements</code> data frame uses the second.</p>
<section id="function-to-create-textual-corpus" class="level2"><h2 class="anchored" data-anchor-id="function-to-create-textual-corpus">Function to create textual corpus</h2>
<p>As I want to replicate this for highlights and improvements – I have created a function that could be replicated with any text analysis to create what is known as a text corpus (see: <a href="https://cran.r-project.org/web/packages/tm/vignettes/tm.pdf">https://cran.r-project.org/web/packages/tm/vignettes/tm.pdf</a>) this creates a series of documents, in our case sentences.</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_tm</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://tm.r-forge.r-project.org/">tm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_tm</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Corpus</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VectorSource</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>This function allows you to pass any data frame to the function and creates a corpus for each data frame you pass to the function. The data frame would be passed to the x parameter. The <code>VectorSource()</code> function creates an element for each part of the corpus.</p>
</section><section id="create-corpus-for-highlights-and-improvements-data-frame" class="level2"><h2 class="anchored" data-anchor-id="create-corpus-for-highlights-and-improvements-data-frame">Create Corpus for Highlights and Improvements data frame</h2>
<p>Now the function has been created, I can simply pass the two separate data frames I created before to create two corpuses:</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_positive</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">corpus_tm</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ws_highlights</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Highlights</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_improvements</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">corpus_tm</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ws_improvements</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Improvements</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>The code block above shows that I create a corpus for the positive (highlights) data frame and an improvements corpus. This will display as hereunder in your environment:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-corpus-output.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of the corpus output from the Environment in RStudio</figcaption></figure>
</div>
<p>##Function to clean data in the corpus</p>
<p>The most common cleaning task of working with text data is to remove things like punctuation, common English words, and so on This is something I have to repeat multiple times when dealing with discourse analysis:</p>
<div class="cell">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">clean_corpus</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_to_use</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org">magrittr</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://tm.r-forge.r-project.org/">tm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_to_use</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_map</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">removePunctuation</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_map</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">stripWhitespace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_map</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">content_transformer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/iconv.html">iconv</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>, to <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span>, sub <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"byte"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_map</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">removeNumbers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_map</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">removeWords</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopwords</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_map</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">content_transformer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tolower</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tm_map</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">removeWords</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"etc"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ie"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eg"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopwords</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"english"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>The parameter here takes the corpus object previously created and uses the corpus passed to:</p>
<ul>
<li>Remove punctuation<br>
</li>
<li>Strip out whitespace between each text item, as the VectorSource has stripped out each word from each sentence in the data frame<br>
</li>
<li>Change the underlying formatting of the text to UTF-8<br>
</li>
<li>Remove numbers<br>
</li>
<li>Remove common English word (stop words)<br>
</li>
<li>Change the case to lower case<br>
</li>
<li>Remove a custom vector of words to adjust for things like “e.g.”, “i.e.”, “etc”.</li>
</ul>
<p>To clean the corpus objects I simply pass the original corpus objects back through this function to perform cleaning:</p>
<div class="cell">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_positive</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_corpus</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_positive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_improvements</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_corpus</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_improvements</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>Inspection of one of the data frames confirms that this has successfully been cleaned:</p>
</section><section id="create-termdocumentmatrix-to-attain-frequent-terms" class="level2"><h2 class="anchored" data-anchor-id="create-termdocumentmatrix-to-attain-frequent-terms">Create TermDocumentMatrix to attain frequent terms</h2>
<p>The term document matrix (explained well here: <a href="https://www.youtube.com/watch?v=dE10fBCDWQc">https://www.youtube.com/watch?v=dE10fBCDWQc</a>) can be used with the corpus to identify frequent terms by classification on a matrix. However, more code is needed to do this:</p>
<div class="cell">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">find_freq_terms_fun</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_in</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc_term_mat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TermDocumentMatrix</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_in</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">freq_terms</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">findFreqTerms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc_term_mat</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Extremes.html">max</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc_term_mat</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nrow</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">terms_grouped</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc_term_mat</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">freq_terms</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/matrix.html">as.matrix</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/colSums.html">rowSums</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">freq_terms</span>, Frequency <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Frequency</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>prop_term_to_total_terms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Frequency</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/nrow.html">nrow</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/function.html">return</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">terms_grouped</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>This function needs explanation. The function uses as a single parameter the corpus that you need to pass in, then a variable is created to create the <code>doc_term_mat</code> which uses the tm TermDocumentMatrix.</p>
<p>Next, I use the <code>findFreqTerms</code> function to iterate from the first entry to the maximum number of rows in the matrix. These are the powerhouses of the function, as they highlight how many times a word has been used in a sentence across all the rows of text.</p>
<p>The <code>terms_grouped</code> variable then slices the term matrix with the frequent terms, this is converted to a matrix, sum of each row are calculated i.e.&nbsp;the number of times the word appears. Then, a data frame is created of the terms in the function with the headings term and Frequency.</p>
<p>Next, we use the power of {dplyr} to use arrange by the frequency descending and to add a mutated column to the data frame to calculate the proportion of that specific term over all terms. The <code>return(data.frame(terms_group))</code> then forces R to return the results of the function.</p>
<p>I then pass my data frames (highlights and improvements) to the function I have just created to see if this method works:</p>
<div class="cell">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positive_freq_terms</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find_freq_terms_fun</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_positive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">improvement_freq_terms</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find_freq_terms_fun</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">corpus_improvements</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>These will be built as data frames and can be viewed in R Studio’s Data environment window:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-term-window.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of the RStudio’s data environment window with terms and frequency</figcaption></figure>
</div>
<p>This has worked just as expected. You could now use ggplot2 to produce a bar chart / pareto chart of the terms.</p>
</section><section id="create-a-word-cloud-with-the-wordcloud2-package" class="level2"><h2 class="anchored" data-anchor-id="create-a-word-cloud-with-the-wordcloud2-package">Create a Word Cloud with the {wordcloud2} package</h2>
<p>R has a {wordcloud} package that produces relatively nice looking word clouds, but {wordcloud2} surpasses this in terms of visualisation. To use this function is easy now I have the frequent terms data frame – using the highlights data frame this can be implemented by using the below syntax:</p>
<div class="cell">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wordcloud2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">positive_freq_terms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>,</span>
<span></span>
<span>           shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pentagon"</span>,</span>
<span></span>
<span>           color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"random-dark"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>To use the function I pass the data frame and use the term and frequency fields only to use the visualisation. There are a number of options and these can be accessed by using the <code>help("wordcloud2")</code> function. Here I use the shape and color parameters to set the display of the word cloud:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://nhs-r-community.github.io/nhs-r-community/blog/img/screenshot-wordcloud.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of the word cloud with Code being the largest word, followed by plot, useful, pick and facets</figcaption></figure>
</div>
<p>This can be exported in the viewer window by using the Export function.</p>
<p>This word cloud relates to the pre workshop prior to the conference. I personally thought the NHS-R conference was amazing and I was honoured to have a spot to speak amongst so many other brilliant R users.</p>
<p>R is so versatile – every day is like a school day when you are learning it, but what a journey.</p>
<p>This blog has been edited for <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#style-guide-for-code">NHS-R styles</a>.</p>


</section></section><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hutson2018" class="csl-entry quarto-appendix-citeas">
Hutson, Gary. 2018. <span>“Text Mining – Term Frequency Analysis and
Word Cloud Creation in R.”</span> October 22, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/text-mining-term-frequency-analysis-and-word-cloud-creation.html">https://nhs-r-community.github.io/nhs-r-community//blog/text-mining-term-frequency-analysis-and-word-cloud-creation.html</a>.
</div></div></section></div> ]]></description>
  <category>Text Mining</category>
  <category>Conference</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/text-mining-term-frequency-analysis-and-word-cloud-creation.html</guid>
  <pubDate>Sun, 21 Oct 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>NHS-R Community Conference: My experience of the day</title>
  <dc:creator>Neil Pettinger</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/nhs-r-community-conference-my-experience-of-the-day.html</link>
  <description><![CDATA[ 

<!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html -->
<!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
-->
<!-- <header id="title-block-header" class="quarto-title-block default page-columns"> -->
<!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> -->



<p>I went to the NHS-R Community Conference in Birmingham on Tuesday.</p>
<p>It was great.</p>
<p>Here are three observations about it.</p>
<p>First, <strong>the old versus the new</strong>. Quite a few of the speakers alluded to the idea that R is sometimes seen in the NHS as this ‘new’ thing that is here to ‘replace’ the ‘old’ tools of Excel, SQL, SPSS and so on. It’s an interesting dichotomy to ponder upon, (a) because it is of course infinitely more complex than that, and (b) because there are so many ways that it’s possible to cast R as the new ‘good guy’ and Excel and so on. as the old ‘bad guy’. Having expressed caveats though, it was interesting to hear throughout the day how often people tended to explain what R was doing by reference to how Excel would do (or – more pertinently – fail to do) the same thing, only it would be more clunky in Excel.</p>
<p>In fact, in the workshop on patient flow that I co-presented with John MacKintosh, we subconsciously had cast ourselves in these roles. I was the old bad guy who was over-reliant on Excel; John was the younger good guy who shows how you can do it better – and you can do more with it – in R. The visualizations we were showcasing were ones that I’d originally done in Excel and that John had improved considerably by using R.</p>
<p>Second, and this next point follows on from the Excel versus R idea, I am intrigued by how <strong>‘light on its feet’</strong> R is. Can R respond to suggestions and edits from managers and clinicians ‘on the fly’? One reservation I’ve had about R as a tool for using at the clinical/managerial interface is that it looks too ‘data-y’, and therefore too forbidding, too exclusive and as a result it frightens the horses. Whereas one of Excel’s virtues is that it’s at least familiar to pretty much everyone, and therefore a bit less daunting as an interface, and you can make use of that familiarity by showing your workings in a way that has a chance of being understood.</p>
<p>But in general I think I am persuaded by the swiftness and elegance of R as a data analysis tool. It might indeed look more forbidding than Excel but we can probably edit and re-draft our work ten times more quickly than we could in Excel, so in terms of rapid iterations (including iterations while we’re actually in the meeting), R wins. Again, I’ll quote an example from my workshop: John attempted some live editing of the code while we were presenting, and yes, it worked, so – yes – it was reassuring to know it can be done, even in in the middle of a presentation to an audience of 24 subject-matter experts.</p>
<p>Third, and apologies of this observation seems a bit self-congratulatory, but it needs to be said. <strong>The <em>mood</em> of the conference was good.</strong> It felt <em>congenial.</em> There was a general ‘nice-ness’ vibe throughout the day. People were respectful, people were inclusive, it was easy to network.</p>
<p>I remember thinking on the train as I made my way to the event that I might suffer from imposter syndrome when I got there. I have had very little exposure to R. I’ve made a start on the tutorials in DataCamp but I really haven’t got very far. And I am utterly indebted to my collaborator John MacKintosh when it comes to having my awareness raised as to the possibilities and potential of R. So I was a bit anxious that I might be sniffed at by the other delegates as someone who wasn’t a <em>bona fide</em> (genuine) R geek, given that so many of the delegates had technical skills that were in a different class altogether.</p>
<p>But I needn’t have worried. It turns out that’s not how the NHS-R community works. It’s inclusive, not exclusive. It’s a multi-disciplinary forum, not a talking shop for geeks. Which means that when the final plenary session for the day was trying to identify the main themes to emerge from the conference, it was <em>collaboration</em> that emerged for me as the key word. We do need to find ways of collaborating better. Collaboration that cuts across disciplines, and across organisations.</p>
<p>But on the evidence of the mood and feel of Tuesday’s conference, collaboration should be easy, because this is a community of people who want to help one another.</p>
<p>This blog has been formatted to remove <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#avoid-latin-abbreviation">Latin Abbreviations</a>.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-pettinger2018" class="csl-entry quarto-appendix-citeas">
Pettinger, Neil. 2018. <span>“NHS-R Community Conference: My Experience
of the Day.”</span> October 16, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/nhs-r-community-conference-my-experience-of-the-day.html">https://nhs-r-community.github.io/nhs-r-community//blog/nhs-r-community-conference-my-experience-of-the-day.html</a>.
</div></div></section></div> ]]></description>
  <category>Conference</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/nhs-r-community-conference-my-experience-of-the-day.html</guid>
  <pubDate>Mon, 15 Oct 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>From script-based development to function-based development and onwards to Package Based development</title>
  <dc:creator>Andrew Hill</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development.html</link>
  <description><![CDATA[ <!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html --><!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
--><!-- <header id="title-block-header" class="quarto-title-block default page-columns"> --><!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> --><p>At the NHS R Conference, I suggested to people that they should embrace the idea of package-based development rather than script-based work.</p>
<p>I’m going to talk you through that process, using the simplest of scripts – ‘Hello World’. I’m going to assume that you’re using the freely available RStudio Desktop Edition as the editor for this: other versions of RStudio are likely to be essentially identical. Non R-Studio users may need to revert to more basic principles.</p>
<p>First let’s write ‘Hello World’ – the simplest R script in the world. Open a new R script file and get your script underway:</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World from the NHS-R Community!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>Save it (for posterity).</p>
<p>In the conference, we discussed that generally writing functions is more helpful than writing scripts as it gives you greater re-usability. This example is a very trivial one (in fact so trivial as to be nearly redundant).</p>
<p>So we consider our script carefully and determine – what does it DO? Clearly it’s a way of greeting a person. What if we wanted to greet the person in a different way? What if we wanted to greet a different person?</p>
<p>So we have defined it’s purpose, and the parameters that are likely to be useful to others.</p>
<p>Let’s re-write our script to be more useable.</p>
<p>We define a function using the function function. You can see a much more detailed tutorial of how to do this here: <a href="http://stat545.com/block011_write-your-own-function-01.html">http://stat545.com/block011_write-your-own-function-01.html</a>.</p>
<p>A function is defined by assigning the result of the function() function to a variable which is the function name. The parameters of <code>function()</code> are our new parameter names in our function.</p>
<p>It is really important to name your function clearly so people know what it does. Generally use active verbs to describe intent, and a consistent naming scheme. Also choose appropriate and clear names for the parameters. So let’s call our new function greet_person, and we will call our parameters greeting and recipient.</p>
<p>Our new code will look like this. Stick this into a new R script for now and run it:</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greet_person</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" from "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>Once you’ve run your script you can now call your function from the console:</p>
<p>greet_person(“Hello World”, “the NHS-R Community!”) And of course if you want to use a different greeting we can now change our parameter value:</p>
<p>greet_person(“Welcome”, “the NHS-R Community!”) So far so good.</p>
<p>But – we’ve had to repeat our sender parameter. What if we know we’re usually going to use that first Hello World greeting; but we just want the option of doing something different if the situation arises?</p>
<p>We can get around that by supplying default values. In the function() function we can set a value to both greeting and sender using =. Let’s set default values for greet_person:</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greet_person</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the NHS-R Community!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" from "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>Now if you want our ‘default’ message you can just call:</p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">greet_person</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>But you can customise either parameter without having to specify anything you don’t want to change:</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">greet_person</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sender <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Drew Hill"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>Instead of “Drew Hill” from our previous example, you’ll see the sender is “1”.</p>
<p>What if you accidentally sent a vector of names? R will turn those into a concatenated string of names without spaces:</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">greet_person</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sender <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bob"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jim"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>Some things however certainly could break this process – so it is really important to check that you can handle the inputs you receive within a function before trying to use them.</p>
<p>The first thing we need to do is to make sure we are dealing with something that can be turned into a character. We can check that by using the is.character function – which returns TRUE if a given value is TRUE, and FALSE if it is not something that can be turned into a character.</p>
<p>If is.character is false, we want to stop with an error:</p>
<div class="cell">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greet_person</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the NHS-R Community!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/character.html">is.character</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/stop.html">stop</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greeting must be a string"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/character.html">is.character</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/stop.html">stop</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sender must be a string"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" from "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>We can test how this works by using NULL as a parameter: in real life this happens quite a lot as you try to pass a variable to your new function but forget to set the variable earlier on!</p>
<div class="cell">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">greet_person</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sender <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<pre><code>Error in greet_person(sender = NULL) : sender must be a string</code></pre>
<p>We also know that our function actually isn’t very good at handling vectors of strings (that is where there is more than one name): it will simply shove them all together without spaces. However it works and is perfectly functional. So we have a design decision: do we want to allow that, or not? A third way might be to allow it but to use a warning – perhaps a little over the top in our example, but for complex examples that may make more sense. Whereas stop will halt the code and force you to fix your bugs, the <code><a href="https://rdrr.io/r/base/warning.html">warning()</a></code> function lets the code continue but tells you to go back and do it better later. Let’s add a warning if there was more than one sender:</p>
<div class="cell">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greet_person</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the NHS-R Community!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/character.html">is.character</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/stop.html">stop</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greeting must be a string"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/character.html">is.character</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/stop.html">stop</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sender must be a string"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/warning.html">warning</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greet_person isn't very good at handling more than one sender. It is better to use just one sender at a time."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">greeting</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" from "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sender</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>If we now called the function with two senders we’d be able to do so but would get politely told that it’s not a good idea:</p>
<div class="cell">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">greet_person</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sender <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jim"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bob"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>So – hopefully from this you’ve moved from having a script which would only do precisely what you wanted in a single set of circumstances, to now having a natty little function which will say greet whoever you want, with the type of greeting that you want.</p>
<p>As an exercise to complete: imagine you work in the NHS-R community welcoming team. You are tasked with sending greetings from the team on a regular basis.</p>
<p>You used to use a script to do this and had to remember to get the style right every time – but now you sit at your console , run your script containing your function, and <code>greet_person()</code> on demand.</p>
<p>Your boss has come to you and urgently wants you to change your way of working. Rather than sending a greeting from the team using just a single team name, he wants you to send the individual names in the greeting from both Jim and Bob.</p>
<p>Have a think about how you could change the function so that we can cope with multiple senders.</p>
<p>The greetings will continue as we then think about scaling up the NHS R Community Greetings division in our next instalment.</p>
<p>This blog was written by:</p>
<p>Dr.&nbsp;Andrew Hill</p>
<p>Clinical Lead for Stroke, St Helens and Knowsley Teaching Hospitals</p>
<p>This blog has been edited for <a href="https://nhsrway.nhsrcommunity.com/style-guides.html#referencing-r-packages-and-functions-in-text">NHS-R Style</a> and to ensure running of code in Quarto.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hill2018" class="csl-entry quarto-appendix-citeas">
Hill, Andrew. 2018. <span>“From Script-Based Development to
Function-Based Development and Onwards to Package Based
Development.”</span> October 15, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development.html">https://nhs-r-community.github.io/nhs-r-community//blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development.html</a>.
</div></div></section></div> ]]></description>
  <category>Functions</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/from-script-based-development-to-function-based-development-and-onwards-to-package-based-development.html</guid>
  <pubDate>Sun, 14 Oct 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>A simple function to install and load packages in R</title>
  <dc:creator>Gary Hutson</dc:creator>
  <link>https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-install-and-load-packages-in-r.html</link>
  <description><![CDATA[ <!-- source: https://github.com/gadenbuie/garrickadenbuie-com/blob/main/_partials/title-block-link-buttons/title-block.html --><!--
<header id="title-block-header" class="quarto-title-block default">
<div class="quarto-title">
--><!-- <header id="title-block-header" class="quarto-title-block default page-columns"> --><!-- <div class="quarto-title page-columns page-full featured-image p-4" style="background-image: url(featured.png), url(featured.jpg), url(../featured.jpg);"> --><p>I was starting to despair at the amount of packages I end up using during the task of transforming, cleaning, modelling and validating some of my models. I thought there must be a simple approach to dealing with this?</p>
<p>So, I started to ponder if I could create a function that would just install and then load the packages straight into R in one go. I found the solution and it can be applied to all your projects – all you have to do is supply the list of packages to the function and “hey presto!”</p>
<p>Run the below function and I will explain what this does:</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">install_or_load_pack</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create.pkg</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/match.html">%in%</a></span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/installed.packages.html">installed.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Package"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create.pkg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/install.packages.html">install.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">create.pkg</span>, dependencies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">sapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pack</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">require</span>, character.only <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I know I should be using purr here, but this is before the Tidyverse is loaded. I know you Tidyverse trend setters will have me here.</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>This creates a function, in which, you can pass a vector of packages you want to load. The sweet point with this function is that if the packages are not installed, this function will do that and then load them, so the next time you come to using the function it will just load them into your project – instead of installing them. I said it was cool, or I thought you might find it cooler than I expected, either way I still think it’s cool.</p>
<p>The last step is to make a call to the function and specify the list of packages you need:</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotly"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.table"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyverse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caret"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_or_load_pack</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>If the packages are not installed then this will show an installation series in the console window, otherwise it will just flag a Boolean value to show that they are now active in the project:</p>
<pre><code>
   ggplot2     plotly data.table  tidyverse      caret 
      TRUE       TRUE       TRUE       TRUE       TRUE 
</code></pre>
<p>This blog was written by Gary Hutson, Principal Analyst, Activity &amp; Access Team, Information &amp; Insight at Nottingham University Hospitals NHS Trust, and was originally posted on <a href="https://hutsons-hacks.info/a-simple-function-to-install-and-load-packages-in-r">Hutson Hacks</a>.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hutson2018" class="csl-entry quarto-appendix-citeas">
Hutson, Gary. 2018. <span>“A Simple Function to Install and Load
Packages in R.”</span> August 17, 2018. <a href="https://nhs-r-community.github.io/nhs-r-community//blog/a-simple-function-to-install-and-load-packages-in-r.html">https://nhs-r-community.github.io/nhs-r-community//blog/a-simple-function-to-install-and-load-packages-in-r.html</a>.
</div></div></section></div> ]]></description>
  <category>Packages</category>
  <guid>https://nhs-r-community.github.io/nhs-r-community/blog/a-simple-function-to-install-and-load-packages-in-r.html</guid>
  <pubDate>Thu, 16 Aug 2018 23:00:00 GMT</pubDate>
</item>
</channel>
</rss>
